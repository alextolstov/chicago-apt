/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var config_pb = require('./config_pb.js');
goog.exportSymbol('proto.com.chicago.dto.RestServiceConfig', null, global);
goog.exportSymbol('proto.com.chicago.dto.ServiceConfig', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.chicago.dto.ServiceConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.chicago.dto.ServiceConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.chicago.dto.ServiceConfig.displayName = 'proto.com.chicago.dto.ServiceConfig';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.chicago.dto.ServiceConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.com.chicago.dto.ServiceConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.chicago.dto.ServiceConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.ServiceConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    outputDir: jspb.Message.getFieldWithDefault(msg, 1, ""),
    applicationConfig: (f = msg.getApplicationConfig()) && config_pb.ApplicationConfig.toObject(includeInstance, f),
    componentsConfig: (f = msg.getComponentsConfig()) && config_pb.ComponentsConfig.toObject(includeInstance, f),
    kafkaConfig: (f = msg.getKafkaConfig()) && config_pb.KafkaConfig.toObject(includeInstance, f),
    cassandraConfig: (f = msg.getCassandraConfig()) && config_pb.CassandraConfig.toObject(includeInstance, f),
    mysqlConfig: (f = msg.getMysqlConfig()) && config_pb.MySqlConfig.toObject(includeInstance, f),
    zookeeperConfig: (f = msg.getZookeeperConfig()) && config_pb.ZooKeeperConfig.toObject(includeInstance, f),
    shutdownConfig: (f = msg.getShutdownConfig()) && config_pb.ShutdownConfig.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.chicago.dto.ServiceConfig}
 */
proto.com.chicago.dto.ServiceConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.chicago.dto.ServiceConfig;
  return proto.com.chicago.dto.ServiceConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.chicago.dto.ServiceConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.chicago.dto.ServiceConfig}
 */
proto.com.chicago.dto.ServiceConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOutputDir(value);
      break;
    case 2:
      var value = new config_pb.ApplicationConfig;
      reader.readMessage(value,config_pb.ApplicationConfig.deserializeBinaryFromReader);
      msg.setApplicationConfig(value);
      break;
    case 3:
      var value = new config_pb.ComponentsConfig;
      reader.readMessage(value,config_pb.ComponentsConfig.deserializeBinaryFromReader);
      msg.setComponentsConfig(value);
      break;
    case 4:
      var value = new config_pb.KafkaConfig;
      reader.readMessage(value,config_pb.KafkaConfig.deserializeBinaryFromReader);
      msg.setKafkaConfig(value);
      break;
    case 5:
      var value = new config_pb.CassandraConfig;
      reader.readMessage(value,config_pb.CassandraConfig.deserializeBinaryFromReader);
      msg.setCassandraConfig(value);
      break;
    case 6:
      var value = new config_pb.MySqlConfig;
      reader.readMessage(value,config_pb.MySqlConfig.deserializeBinaryFromReader);
      msg.setMysqlConfig(value);
      break;
    case 7:
      var value = new config_pb.ZooKeeperConfig;
      reader.readMessage(value,config_pb.ZooKeeperConfig.deserializeBinaryFromReader);
      msg.setZookeeperConfig(value);
      break;
    case 8:
      var value = new config_pb.ShutdownConfig;
      reader.readMessage(value,config_pb.ShutdownConfig.deserializeBinaryFromReader);
      msg.setShutdownConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.chicago.dto.ServiceConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.chicago.dto.ServiceConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.chicago.dto.ServiceConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.ServiceConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOutputDir();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getApplicationConfig();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      config_pb.ApplicationConfig.serializeBinaryToWriter
    );
  }
  f = message.getComponentsConfig();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      config_pb.ComponentsConfig.serializeBinaryToWriter
    );
  }
  f = message.getKafkaConfig();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      config_pb.KafkaConfig.serializeBinaryToWriter
    );
  }
  f = message.getCassandraConfig();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      config_pb.CassandraConfig.serializeBinaryToWriter
    );
  }
  f = message.getMysqlConfig();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      config_pb.MySqlConfig.serializeBinaryToWriter
    );
  }
  f = message.getZookeeperConfig();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      config_pb.ZooKeeperConfig.serializeBinaryToWriter
    );
  }
  f = message.getShutdownConfig();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      config_pb.ShutdownConfig.serializeBinaryToWriter
    );
  }
};


/**
 * optional string output_dir = 1;
 * @return {string}
 */
proto.com.chicago.dto.ServiceConfig.prototype.getOutputDir = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.com.chicago.dto.ServiceConfig.prototype.setOutputDir = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional ApplicationConfig application_config = 2;
 * @return {?proto.com.chicago.dto.ApplicationConfig}
 */
proto.com.chicago.dto.ServiceConfig.prototype.getApplicationConfig = function() {
  return /** @type{?proto.com.chicago.dto.ApplicationConfig} */ (
    jspb.Message.getWrapperField(this, config_pb.ApplicationConfig, 2));
};


/** @param {?proto.com.chicago.dto.ApplicationConfig|undefined} value */
proto.com.chicago.dto.ServiceConfig.prototype.setApplicationConfig = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.com.chicago.dto.ServiceConfig.prototype.clearApplicationConfig = function() {
  this.setApplicationConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.com.chicago.dto.ServiceConfig.prototype.hasApplicationConfig = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ComponentsConfig components_config = 3;
 * @return {?proto.com.chicago.dto.ComponentsConfig}
 */
proto.com.chicago.dto.ServiceConfig.prototype.getComponentsConfig = function() {
  return /** @type{?proto.com.chicago.dto.ComponentsConfig} */ (
    jspb.Message.getWrapperField(this, config_pb.ComponentsConfig, 3));
};


/** @param {?proto.com.chicago.dto.ComponentsConfig|undefined} value */
proto.com.chicago.dto.ServiceConfig.prototype.setComponentsConfig = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.com.chicago.dto.ServiceConfig.prototype.clearComponentsConfig = function() {
  this.setComponentsConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.com.chicago.dto.ServiceConfig.prototype.hasComponentsConfig = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional KafkaConfig kafka_config = 4;
 * @return {?proto.com.chicago.dto.KafkaConfig}
 */
proto.com.chicago.dto.ServiceConfig.prototype.getKafkaConfig = function() {
  return /** @type{?proto.com.chicago.dto.KafkaConfig} */ (
    jspb.Message.getWrapperField(this, config_pb.KafkaConfig, 4));
};


/** @param {?proto.com.chicago.dto.KafkaConfig|undefined} value */
proto.com.chicago.dto.ServiceConfig.prototype.setKafkaConfig = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.com.chicago.dto.ServiceConfig.prototype.clearKafkaConfig = function() {
  this.setKafkaConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.com.chicago.dto.ServiceConfig.prototype.hasKafkaConfig = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional CassandraConfig cassandra_config = 5;
 * @return {?proto.com.chicago.dto.CassandraConfig}
 */
proto.com.chicago.dto.ServiceConfig.prototype.getCassandraConfig = function() {
  return /** @type{?proto.com.chicago.dto.CassandraConfig} */ (
    jspb.Message.getWrapperField(this, config_pb.CassandraConfig, 5));
};


/** @param {?proto.com.chicago.dto.CassandraConfig|undefined} value */
proto.com.chicago.dto.ServiceConfig.prototype.setCassandraConfig = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.com.chicago.dto.ServiceConfig.prototype.clearCassandraConfig = function() {
  this.setCassandraConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.com.chicago.dto.ServiceConfig.prototype.hasCassandraConfig = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional MySqlConfig mysql_config = 6;
 * @return {?proto.com.chicago.dto.MySqlConfig}
 */
proto.com.chicago.dto.ServiceConfig.prototype.getMysqlConfig = function() {
  return /** @type{?proto.com.chicago.dto.MySqlConfig} */ (
    jspb.Message.getWrapperField(this, config_pb.MySqlConfig, 6));
};


/** @param {?proto.com.chicago.dto.MySqlConfig|undefined} value */
proto.com.chicago.dto.ServiceConfig.prototype.setMysqlConfig = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.com.chicago.dto.ServiceConfig.prototype.clearMysqlConfig = function() {
  this.setMysqlConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.com.chicago.dto.ServiceConfig.prototype.hasMysqlConfig = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional ZooKeeperConfig zookeeper_config = 7;
 * @return {?proto.com.chicago.dto.ZooKeeperConfig}
 */
proto.com.chicago.dto.ServiceConfig.prototype.getZookeeperConfig = function() {
  return /** @type{?proto.com.chicago.dto.ZooKeeperConfig} */ (
    jspb.Message.getWrapperField(this, config_pb.ZooKeeperConfig, 7));
};


/** @param {?proto.com.chicago.dto.ZooKeeperConfig|undefined} value */
proto.com.chicago.dto.ServiceConfig.prototype.setZookeeperConfig = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.com.chicago.dto.ServiceConfig.prototype.clearZookeeperConfig = function() {
  this.setZookeeperConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.com.chicago.dto.ServiceConfig.prototype.hasZookeeperConfig = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional ShutdownConfig shutdown_config = 8;
 * @return {?proto.com.chicago.dto.ShutdownConfig}
 */
proto.com.chicago.dto.ServiceConfig.prototype.getShutdownConfig = function() {
  return /** @type{?proto.com.chicago.dto.ShutdownConfig} */ (
    jspb.Message.getWrapperField(this, config_pb.ShutdownConfig, 8));
};


/** @param {?proto.com.chicago.dto.ShutdownConfig|undefined} value */
proto.com.chicago.dto.ServiceConfig.prototype.setShutdownConfig = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


proto.com.chicago.dto.ServiceConfig.prototype.clearShutdownConfig = function() {
  this.setShutdownConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.com.chicago.dto.ServiceConfig.prototype.hasShutdownConfig = function() {
  return jspb.Message.getField(this, 8) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.chicago.dto.RestServiceConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.chicago.dto.RestServiceConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.chicago.dto.RestServiceConfig.displayName = 'proto.com.chicago.dto.RestServiceConfig';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.chicago.dto.RestServiceConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.com.chicago.dto.RestServiceConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.chicago.dto.RestServiceConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.RestServiceConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    logDir: jspb.Message.getFieldWithDefault(msg, 1, ""),
    kafkaConfig: (f = msg.getKafkaConfig()) && config_pb.KafkaConfig.toObject(includeInstance, f),
    zookeeperConfig: (f = msg.getZookeeperConfig()) && config_pb.ZooKeeperConfig.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.chicago.dto.RestServiceConfig}
 */
proto.com.chicago.dto.RestServiceConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.chicago.dto.RestServiceConfig;
  return proto.com.chicago.dto.RestServiceConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.chicago.dto.RestServiceConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.chicago.dto.RestServiceConfig}
 */
proto.com.chicago.dto.RestServiceConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogDir(value);
      break;
    case 2:
      var value = new config_pb.KafkaConfig;
      reader.readMessage(value,config_pb.KafkaConfig.deserializeBinaryFromReader);
      msg.setKafkaConfig(value);
      break;
    case 3:
      var value = new config_pb.ZooKeeperConfig;
      reader.readMessage(value,config_pb.ZooKeeperConfig.deserializeBinaryFromReader);
      msg.setZookeeperConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.chicago.dto.RestServiceConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.chicago.dto.RestServiceConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.chicago.dto.RestServiceConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.RestServiceConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLogDir();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getKafkaConfig();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      config_pb.KafkaConfig.serializeBinaryToWriter
    );
  }
  f = message.getZookeeperConfig();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      config_pb.ZooKeeperConfig.serializeBinaryToWriter
    );
  }
};


/**
 * optional string log_dir = 1;
 * @return {string}
 */
proto.com.chicago.dto.RestServiceConfig.prototype.getLogDir = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.com.chicago.dto.RestServiceConfig.prototype.setLogDir = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional KafkaConfig kafka_config = 2;
 * @return {?proto.com.chicago.dto.KafkaConfig}
 */
proto.com.chicago.dto.RestServiceConfig.prototype.getKafkaConfig = function() {
  return /** @type{?proto.com.chicago.dto.KafkaConfig} */ (
    jspb.Message.getWrapperField(this, config_pb.KafkaConfig, 2));
};


/** @param {?proto.com.chicago.dto.KafkaConfig|undefined} value */
proto.com.chicago.dto.RestServiceConfig.prototype.setKafkaConfig = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.com.chicago.dto.RestServiceConfig.prototype.clearKafkaConfig = function() {
  this.setKafkaConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.com.chicago.dto.RestServiceConfig.prototype.hasKafkaConfig = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ZooKeeperConfig zookeeper_config = 3;
 * @return {?proto.com.chicago.dto.ZooKeeperConfig}
 */
proto.com.chicago.dto.RestServiceConfig.prototype.getZookeeperConfig = function() {
  return /** @type{?proto.com.chicago.dto.ZooKeeperConfig} */ (
    jspb.Message.getWrapperField(this, config_pb.ZooKeeperConfig, 3));
};


/** @param {?proto.com.chicago.dto.ZooKeeperConfig|undefined} value */
proto.com.chicago.dto.RestServiceConfig.prototype.setZookeeperConfig = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.com.chicago.dto.RestServiceConfig.prototype.clearZookeeperConfig = function() {
  this.setZookeeperConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.com.chicago.dto.RestServiceConfig.prototype.hasZookeeperConfig = function() {
  return jspb.Message.getField(this, 3) != null;
};


goog.object.extend(exports, proto.com.chicago.dto);
