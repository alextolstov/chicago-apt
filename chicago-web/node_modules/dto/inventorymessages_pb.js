/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var common_pb = require('./common_pb.js');
var inventory_pb = require('./inventory_pb.js');
goog.exportSymbol('proto.com.chicago.dto.InventoryCatalogItemRequest', null, global);
goog.exportSymbol('proto.com.chicago.dto.InventoryCatalogItemResponse', null, global);
goog.exportSymbol('proto.com.chicago.dto.InventoryCatalogItemsRequest', null, global);
goog.exportSymbol('proto.com.chicago.dto.InventoryCatalogItemsResponse', null, global);
goog.exportSymbol('proto.com.chicago.dto.InventoryItemBrandRequest', null, global);
goog.exportSymbol('proto.com.chicago.dto.InventoryItemBrandResponse', null, global);
goog.exportSymbol('proto.com.chicago.dto.InventoryItemBrandsResponse', null, global);
goog.exportSymbol('proto.com.chicago.dto.InventoryItemCategoriesResponse', null, global);
goog.exportSymbol('proto.com.chicago.dto.InventoryItemCategoryRequest', null, global);
goog.exportSymbol('proto.com.chicago.dto.InventoryItemCategoryResponse', null, global);
goog.exportSymbol('proto.com.chicago.dto.InventoryItemSupplierRequest', null, global);
goog.exportSymbol('proto.com.chicago.dto.InventoryItemSupplierResponse', null, global);
goog.exportSymbol('proto.com.chicago.dto.InventoryItemSuppliersResponse', null, global);
goog.exportSymbol('proto.com.chicago.dto.InventoryItemUnitRequest', null, global);
goog.exportSymbol('proto.com.chicago.dto.InventoryItemUnitResponse', null, global);
goog.exportSymbol('proto.com.chicago.dto.InventoryItemUnitsResponse', null, global);
goog.exportSymbol('proto.com.chicago.dto.InventoryLocationRequest', null, global);
goog.exportSymbol('proto.com.chicago.dto.InventoryLocationResponse', null, global);
goog.exportSymbol('proto.com.chicago.dto.InventoryLocationsResponse', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.chicago.dto.InventoryItemBrandRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.chicago.dto.InventoryItemBrandRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.chicago.dto.InventoryItemBrandRequest.displayName = 'proto.com.chicago.dto.InventoryItemBrandRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.chicago.dto.InventoryItemBrandRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.chicago.dto.InventoryItemBrandRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.chicago.dto.InventoryItemBrandRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.InventoryItemBrandRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    crudOperation: jspb.Message.getFieldWithDefault(msg, 1, 0),
    itemBrand: (f = msg.getItemBrand()) && inventory_pb.InventoryItemBrand.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.chicago.dto.InventoryItemBrandRequest}
 */
proto.com.chicago.dto.InventoryItemBrandRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.chicago.dto.InventoryItemBrandRequest;
  return proto.com.chicago.dto.InventoryItemBrandRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.chicago.dto.InventoryItemBrandRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.chicago.dto.InventoryItemBrandRequest}
 */
proto.com.chicago.dto.InventoryItemBrandRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.com.chicago.dto.CrudOperation} */ (reader.readEnum());
      msg.setCrudOperation(value);
      break;
    case 2:
      var value = new inventory_pb.InventoryItemBrand;
      reader.readMessage(value,inventory_pb.InventoryItemBrand.deserializeBinaryFromReader);
      msg.setItemBrand(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.chicago.dto.InventoryItemBrandRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.chicago.dto.InventoryItemBrandRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.chicago.dto.InventoryItemBrandRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.InventoryItemBrandRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCrudOperation();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getItemBrand();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      inventory_pb.InventoryItemBrand.serializeBinaryToWriter
    );
  }
};


/**
 * optional CrudOperation crud_operation = 1;
 * @return {!proto.com.chicago.dto.CrudOperation}
 */
proto.com.chicago.dto.InventoryItemBrandRequest.prototype.getCrudOperation = function() {
  return /** @type {!proto.com.chicago.dto.CrudOperation} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.com.chicago.dto.CrudOperation} value */
proto.com.chicago.dto.InventoryItemBrandRequest.prototype.setCrudOperation = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional InventoryItemBrand item_brand = 2;
 * @return {?proto.com.chicago.dto.InventoryItemBrand}
 */
proto.com.chicago.dto.InventoryItemBrandRequest.prototype.getItemBrand = function() {
  return /** @type{?proto.com.chicago.dto.InventoryItemBrand} */ (
    jspb.Message.getWrapperField(this, inventory_pb.InventoryItemBrand, 2));
};


/** @param {?proto.com.chicago.dto.InventoryItemBrand|undefined} value */
proto.com.chicago.dto.InventoryItemBrandRequest.prototype.setItemBrand = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.com.chicago.dto.InventoryItemBrandRequest.prototype.clearItemBrand = function() {
  this.setItemBrand(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.com.chicago.dto.InventoryItemBrandRequest.prototype.hasItemBrand = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.chicago.dto.InventoryItemBrandResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.chicago.dto.InventoryItemBrandResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.chicago.dto.InventoryItemBrandResponse.displayName = 'proto.com.chicago.dto.InventoryItemBrandResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.chicago.dto.InventoryItemBrandResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.chicago.dto.InventoryItemBrandResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.chicago.dto.InventoryItemBrandResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.InventoryItemBrandResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemBrand: (f = msg.getItemBrand()) && inventory_pb.InventoryItemBrand.toObject(includeInstance, f),
    transactionError: (f = msg.getTransactionError()) && common_pb.TransactionError.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.chicago.dto.InventoryItemBrandResponse}
 */
proto.com.chicago.dto.InventoryItemBrandResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.chicago.dto.InventoryItemBrandResponse;
  return proto.com.chicago.dto.InventoryItemBrandResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.chicago.dto.InventoryItemBrandResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.chicago.dto.InventoryItemBrandResponse}
 */
proto.com.chicago.dto.InventoryItemBrandResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new inventory_pb.InventoryItemBrand;
      reader.readMessage(value,inventory_pb.InventoryItemBrand.deserializeBinaryFromReader);
      msg.setItemBrand(value);
      break;
    case 2:
      var value = new common_pb.TransactionError;
      reader.readMessage(value,common_pb.TransactionError.deserializeBinaryFromReader);
      msg.setTransactionError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.chicago.dto.InventoryItemBrandResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.chicago.dto.InventoryItemBrandResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.chicago.dto.InventoryItemBrandResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.InventoryItemBrandResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemBrand();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      inventory_pb.InventoryItemBrand.serializeBinaryToWriter
    );
  }
  f = message.getTransactionError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_pb.TransactionError.serializeBinaryToWriter
    );
  }
};


/**
 * optional InventoryItemBrand item_brand = 1;
 * @return {?proto.com.chicago.dto.InventoryItemBrand}
 */
proto.com.chicago.dto.InventoryItemBrandResponse.prototype.getItemBrand = function() {
  return /** @type{?proto.com.chicago.dto.InventoryItemBrand} */ (
    jspb.Message.getWrapperField(this, inventory_pb.InventoryItemBrand, 1));
};


/** @param {?proto.com.chicago.dto.InventoryItemBrand|undefined} value */
proto.com.chicago.dto.InventoryItemBrandResponse.prototype.setItemBrand = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.com.chicago.dto.InventoryItemBrandResponse.prototype.clearItemBrand = function() {
  this.setItemBrand(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.com.chicago.dto.InventoryItemBrandResponse.prototype.hasItemBrand = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional TransactionError transaction_error = 2;
 * @return {?proto.com.chicago.dto.TransactionError}
 */
proto.com.chicago.dto.InventoryItemBrandResponse.prototype.getTransactionError = function() {
  return /** @type{?proto.com.chicago.dto.TransactionError} */ (
    jspb.Message.getWrapperField(this, common_pb.TransactionError, 2));
};


/** @param {?proto.com.chicago.dto.TransactionError|undefined} value */
proto.com.chicago.dto.InventoryItemBrandResponse.prototype.setTransactionError = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.com.chicago.dto.InventoryItemBrandResponse.prototype.clearTransactionError = function() {
  this.setTransactionError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.com.chicago.dto.InventoryItemBrandResponse.prototype.hasTransactionError = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.chicago.dto.InventoryItemBrandsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.chicago.dto.InventoryItemBrandsResponse.repeatedFields_, null);
};
goog.inherits(proto.com.chicago.dto.InventoryItemBrandsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.chicago.dto.InventoryItemBrandsResponse.displayName = 'proto.com.chicago.dto.InventoryItemBrandsResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.chicago.dto.InventoryItemBrandsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.chicago.dto.InventoryItemBrandsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.chicago.dto.InventoryItemBrandsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.chicago.dto.InventoryItemBrandsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.InventoryItemBrandsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemBrandsList: jspb.Message.toObjectList(msg.getItemBrandsList(),
    inventory_pb.InventoryItemBrand.toObject, includeInstance),
    transactionError: (f = msg.getTransactionError()) && common_pb.TransactionError.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.chicago.dto.InventoryItemBrandsResponse}
 */
proto.com.chicago.dto.InventoryItemBrandsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.chicago.dto.InventoryItemBrandsResponse;
  return proto.com.chicago.dto.InventoryItemBrandsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.chicago.dto.InventoryItemBrandsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.chicago.dto.InventoryItemBrandsResponse}
 */
proto.com.chicago.dto.InventoryItemBrandsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new inventory_pb.InventoryItemBrand;
      reader.readMessage(value,inventory_pb.InventoryItemBrand.deserializeBinaryFromReader);
      msg.addItemBrands(value);
      break;
    case 2:
      var value = new common_pb.TransactionError;
      reader.readMessage(value,common_pb.TransactionError.deserializeBinaryFromReader);
      msg.setTransactionError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.chicago.dto.InventoryItemBrandsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.chicago.dto.InventoryItemBrandsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.chicago.dto.InventoryItemBrandsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.InventoryItemBrandsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemBrandsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      inventory_pb.InventoryItemBrand.serializeBinaryToWriter
    );
  }
  f = message.getTransactionError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_pb.TransactionError.serializeBinaryToWriter
    );
  }
};


/**
 * repeated InventoryItemBrand item_brands = 1;
 * @return {!Array.<!proto.com.chicago.dto.InventoryItemBrand>}
 */
proto.com.chicago.dto.InventoryItemBrandsResponse.prototype.getItemBrandsList = function() {
  return /** @type{!Array.<!proto.com.chicago.dto.InventoryItemBrand>} */ (
    jspb.Message.getRepeatedWrapperField(this, inventory_pb.InventoryItemBrand, 1));
};


/** @param {!Array.<!proto.com.chicago.dto.InventoryItemBrand>} value */
proto.com.chicago.dto.InventoryItemBrandsResponse.prototype.setItemBrandsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.com.chicago.dto.InventoryItemBrand=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.chicago.dto.InventoryItemBrand}
 */
proto.com.chicago.dto.InventoryItemBrandsResponse.prototype.addItemBrands = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.com.chicago.dto.InventoryItemBrand, opt_index);
};


proto.com.chicago.dto.InventoryItemBrandsResponse.prototype.clearItemBrandsList = function() {
  this.setItemBrandsList([]);
};


/**
 * optional TransactionError transaction_error = 2;
 * @return {?proto.com.chicago.dto.TransactionError}
 */
proto.com.chicago.dto.InventoryItemBrandsResponse.prototype.getTransactionError = function() {
  return /** @type{?proto.com.chicago.dto.TransactionError} */ (
    jspb.Message.getWrapperField(this, common_pb.TransactionError, 2));
};


/** @param {?proto.com.chicago.dto.TransactionError|undefined} value */
proto.com.chicago.dto.InventoryItemBrandsResponse.prototype.setTransactionError = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.com.chicago.dto.InventoryItemBrandsResponse.prototype.clearTransactionError = function() {
  this.setTransactionError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.com.chicago.dto.InventoryItemBrandsResponse.prototype.hasTransactionError = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.chicago.dto.InventoryItemCategoryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.chicago.dto.InventoryItemCategoryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.chicago.dto.InventoryItemCategoryRequest.displayName = 'proto.com.chicago.dto.InventoryItemCategoryRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.chicago.dto.InventoryItemCategoryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.chicago.dto.InventoryItemCategoryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.chicago.dto.InventoryItemCategoryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.InventoryItemCategoryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    crudOperation: jspb.Message.getFieldWithDefault(msg, 1, 0),
    itemCategory: (f = msg.getItemCategory()) && inventory_pb.InventoryItemCategory.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.chicago.dto.InventoryItemCategoryRequest}
 */
proto.com.chicago.dto.InventoryItemCategoryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.chicago.dto.InventoryItemCategoryRequest;
  return proto.com.chicago.dto.InventoryItemCategoryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.chicago.dto.InventoryItemCategoryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.chicago.dto.InventoryItemCategoryRequest}
 */
proto.com.chicago.dto.InventoryItemCategoryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.com.chicago.dto.CrudOperation} */ (reader.readEnum());
      msg.setCrudOperation(value);
      break;
    case 2:
      var value = new inventory_pb.InventoryItemCategory;
      reader.readMessage(value,inventory_pb.InventoryItemCategory.deserializeBinaryFromReader);
      msg.setItemCategory(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.chicago.dto.InventoryItemCategoryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.chicago.dto.InventoryItemCategoryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.chicago.dto.InventoryItemCategoryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.InventoryItemCategoryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCrudOperation();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getItemCategory();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      inventory_pb.InventoryItemCategory.serializeBinaryToWriter
    );
  }
};


/**
 * optional CrudOperation crud_operation = 1;
 * @return {!proto.com.chicago.dto.CrudOperation}
 */
proto.com.chicago.dto.InventoryItemCategoryRequest.prototype.getCrudOperation = function() {
  return /** @type {!proto.com.chicago.dto.CrudOperation} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.com.chicago.dto.CrudOperation} value */
proto.com.chicago.dto.InventoryItemCategoryRequest.prototype.setCrudOperation = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional InventoryItemCategory item_category = 2;
 * @return {?proto.com.chicago.dto.InventoryItemCategory}
 */
proto.com.chicago.dto.InventoryItemCategoryRequest.prototype.getItemCategory = function() {
  return /** @type{?proto.com.chicago.dto.InventoryItemCategory} */ (
    jspb.Message.getWrapperField(this, inventory_pb.InventoryItemCategory, 2));
};


/** @param {?proto.com.chicago.dto.InventoryItemCategory|undefined} value */
proto.com.chicago.dto.InventoryItemCategoryRequest.prototype.setItemCategory = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.com.chicago.dto.InventoryItemCategoryRequest.prototype.clearItemCategory = function() {
  this.setItemCategory(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.com.chicago.dto.InventoryItemCategoryRequest.prototype.hasItemCategory = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.chicago.dto.InventoryItemCategoryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.chicago.dto.InventoryItemCategoryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.chicago.dto.InventoryItemCategoryResponse.displayName = 'proto.com.chicago.dto.InventoryItemCategoryResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.chicago.dto.InventoryItemCategoryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.chicago.dto.InventoryItemCategoryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.chicago.dto.InventoryItemCategoryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.InventoryItemCategoryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemCategory: (f = msg.getItemCategory()) && inventory_pb.InventoryItemCategory.toObject(includeInstance, f),
    transactionError: (f = msg.getTransactionError()) && common_pb.TransactionError.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.chicago.dto.InventoryItemCategoryResponse}
 */
proto.com.chicago.dto.InventoryItemCategoryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.chicago.dto.InventoryItemCategoryResponse;
  return proto.com.chicago.dto.InventoryItemCategoryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.chicago.dto.InventoryItemCategoryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.chicago.dto.InventoryItemCategoryResponse}
 */
proto.com.chicago.dto.InventoryItemCategoryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new inventory_pb.InventoryItemCategory;
      reader.readMessage(value,inventory_pb.InventoryItemCategory.deserializeBinaryFromReader);
      msg.setItemCategory(value);
      break;
    case 2:
      var value = new common_pb.TransactionError;
      reader.readMessage(value,common_pb.TransactionError.deserializeBinaryFromReader);
      msg.setTransactionError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.chicago.dto.InventoryItemCategoryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.chicago.dto.InventoryItemCategoryResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.chicago.dto.InventoryItemCategoryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.InventoryItemCategoryResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemCategory();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      inventory_pb.InventoryItemCategory.serializeBinaryToWriter
    );
  }
  f = message.getTransactionError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_pb.TransactionError.serializeBinaryToWriter
    );
  }
};


/**
 * optional InventoryItemCategory item_category = 1;
 * @return {?proto.com.chicago.dto.InventoryItemCategory}
 */
proto.com.chicago.dto.InventoryItemCategoryResponse.prototype.getItemCategory = function() {
  return /** @type{?proto.com.chicago.dto.InventoryItemCategory} */ (
    jspb.Message.getWrapperField(this, inventory_pb.InventoryItemCategory, 1));
};


/** @param {?proto.com.chicago.dto.InventoryItemCategory|undefined} value */
proto.com.chicago.dto.InventoryItemCategoryResponse.prototype.setItemCategory = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.com.chicago.dto.InventoryItemCategoryResponse.prototype.clearItemCategory = function() {
  this.setItemCategory(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.com.chicago.dto.InventoryItemCategoryResponse.prototype.hasItemCategory = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional TransactionError transaction_error = 2;
 * @return {?proto.com.chicago.dto.TransactionError}
 */
proto.com.chicago.dto.InventoryItemCategoryResponse.prototype.getTransactionError = function() {
  return /** @type{?proto.com.chicago.dto.TransactionError} */ (
    jspb.Message.getWrapperField(this, common_pb.TransactionError, 2));
};


/** @param {?proto.com.chicago.dto.TransactionError|undefined} value */
proto.com.chicago.dto.InventoryItemCategoryResponse.prototype.setTransactionError = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.com.chicago.dto.InventoryItemCategoryResponse.prototype.clearTransactionError = function() {
  this.setTransactionError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.com.chicago.dto.InventoryItemCategoryResponse.prototype.hasTransactionError = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.chicago.dto.InventoryItemCategoriesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.chicago.dto.InventoryItemCategoriesResponse.repeatedFields_, null);
};
goog.inherits(proto.com.chicago.dto.InventoryItemCategoriesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.chicago.dto.InventoryItemCategoriesResponse.displayName = 'proto.com.chicago.dto.InventoryItemCategoriesResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.chicago.dto.InventoryItemCategoriesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.chicago.dto.InventoryItemCategoriesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.chicago.dto.InventoryItemCategoriesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.chicago.dto.InventoryItemCategoriesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.InventoryItemCategoriesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemCategoriesList: jspb.Message.toObjectList(msg.getItemCategoriesList(),
    inventory_pb.InventoryItemCategory.toObject, includeInstance),
    transactionError: (f = msg.getTransactionError()) && common_pb.TransactionError.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.chicago.dto.InventoryItemCategoriesResponse}
 */
proto.com.chicago.dto.InventoryItemCategoriesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.chicago.dto.InventoryItemCategoriesResponse;
  return proto.com.chicago.dto.InventoryItemCategoriesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.chicago.dto.InventoryItemCategoriesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.chicago.dto.InventoryItemCategoriesResponse}
 */
proto.com.chicago.dto.InventoryItemCategoriesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new inventory_pb.InventoryItemCategory;
      reader.readMessage(value,inventory_pb.InventoryItemCategory.deserializeBinaryFromReader);
      msg.addItemCategories(value);
      break;
    case 2:
      var value = new common_pb.TransactionError;
      reader.readMessage(value,common_pb.TransactionError.deserializeBinaryFromReader);
      msg.setTransactionError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.chicago.dto.InventoryItemCategoriesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.chicago.dto.InventoryItemCategoriesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.chicago.dto.InventoryItemCategoriesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.InventoryItemCategoriesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemCategoriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      inventory_pb.InventoryItemCategory.serializeBinaryToWriter
    );
  }
  f = message.getTransactionError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_pb.TransactionError.serializeBinaryToWriter
    );
  }
};


/**
 * repeated InventoryItemCategory item_categories = 1;
 * @return {!Array.<!proto.com.chicago.dto.InventoryItemCategory>}
 */
proto.com.chicago.dto.InventoryItemCategoriesResponse.prototype.getItemCategoriesList = function() {
  return /** @type{!Array.<!proto.com.chicago.dto.InventoryItemCategory>} */ (
    jspb.Message.getRepeatedWrapperField(this, inventory_pb.InventoryItemCategory, 1));
};


/** @param {!Array.<!proto.com.chicago.dto.InventoryItemCategory>} value */
proto.com.chicago.dto.InventoryItemCategoriesResponse.prototype.setItemCategoriesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.com.chicago.dto.InventoryItemCategory=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.chicago.dto.InventoryItemCategory}
 */
proto.com.chicago.dto.InventoryItemCategoriesResponse.prototype.addItemCategories = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.com.chicago.dto.InventoryItemCategory, opt_index);
};


proto.com.chicago.dto.InventoryItemCategoriesResponse.prototype.clearItemCategoriesList = function() {
  this.setItemCategoriesList([]);
};


/**
 * optional TransactionError transaction_error = 2;
 * @return {?proto.com.chicago.dto.TransactionError}
 */
proto.com.chicago.dto.InventoryItemCategoriesResponse.prototype.getTransactionError = function() {
  return /** @type{?proto.com.chicago.dto.TransactionError} */ (
    jspb.Message.getWrapperField(this, common_pb.TransactionError, 2));
};


/** @param {?proto.com.chicago.dto.TransactionError|undefined} value */
proto.com.chicago.dto.InventoryItemCategoriesResponse.prototype.setTransactionError = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.com.chicago.dto.InventoryItemCategoriesResponse.prototype.clearTransactionError = function() {
  this.setTransactionError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.com.chicago.dto.InventoryItemCategoriesResponse.prototype.hasTransactionError = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.chicago.dto.InventoryItemUnitRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.chicago.dto.InventoryItemUnitRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.chicago.dto.InventoryItemUnitRequest.displayName = 'proto.com.chicago.dto.InventoryItemUnitRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.chicago.dto.InventoryItemUnitRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.chicago.dto.InventoryItemUnitRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.chicago.dto.InventoryItemUnitRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.InventoryItemUnitRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    crudOperation: jspb.Message.getFieldWithDefault(msg, 1, 0),
    itemUnit: (f = msg.getItemUnit()) && inventory_pb.InventoryItemUnit.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.chicago.dto.InventoryItemUnitRequest}
 */
proto.com.chicago.dto.InventoryItemUnitRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.chicago.dto.InventoryItemUnitRequest;
  return proto.com.chicago.dto.InventoryItemUnitRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.chicago.dto.InventoryItemUnitRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.chicago.dto.InventoryItemUnitRequest}
 */
proto.com.chicago.dto.InventoryItemUnitRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.com.chicago.dto.CrudOperation} */ (reader.readEnum());
      msg.setCrudOperation(value);
      break;
    case 2:
      var value = new inventory_pb.InventoryItemUnit;
      reader.readMessage(value,inventory_pb.InventoryItemUnit.deserializeBinaryFromReader);
      msg.setItemUnit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.chicago.dto.InventoryItemUnitRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.chicago.dto.InventoryItemUnitRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.chicago.dto.InventoryItemUnitRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.InventoryItemUnitRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCrudOperation();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getItemUnit();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      inventory_pb.InventoryItemUnit.serializeBinaryToWriter
    );
  }
};


/**
 * optional CrudOperation crud_operation = 1;
 * @return {!proto.com.chicago.dto.CrudOperation}
 */
proto.com.chicago.dto.InventoryItemUnitRequest.prototype.getCrudOperation = function() {
  return /** @type {!proto.com.chicago.dto.CrudOperation} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.com.chicago.dto.CrudOperation} value */
proto.com.chicago.dto.InventoryItemUnitRequest.prototype.setCrudOperation = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional InventoryItemUnit item_unit = 2;
 * @return {?proto.com.chicago.dto.InventoryItemUnit}
 */
proto.com.chicago.dto.InventoryItemUnitRequest.prototype.getItemUnit = function() {
  return /** @type{?proto.com.chicago.dto.InventoryItemUnit} */ (
    jspb.Message.getWrapperField(this, inventory_pb.InventoryItemUnit, 2));
};


/** @param {?proto.com.chicago.dto.InventoryItemUnit|undefined} value */
proto.com.chicago.dto.InventoryItemUnitRequest.prototype.setItemUnit = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.com.chicago.dto.InventoryItemUnitRequest.prototype.clearItemUnit = function() {
  this.setItemUnit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.com.chicago.dto.InventoryItemUnitRequest.prototype.hasItemUnit = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.chicago.dto.InventoryItemUnitResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.chicago.dto.InventoryItemUnitResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.chicago.dto.InventoryItemUnitResponse.displayName = 'proto.com.chicago.dto.InventoryItemUnitResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.chicago.dto.InventoryItemUnitResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.chicago.dto.InventoryItemUnitResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.chicago.dto.InventoryItemUnitResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.InventoryItemUnitResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemUnit: (f = msg.getItemUnit()) && inventory_pb.InventoryItemUnit.toObject(includeInstance, f),
    transactionError: (f = msg.getTransactionError()) && common_pb.TransactionError.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.chicago.dto.InventoryItemUnitResponse}
 */
proto.com.chicago.dto.InventoryItemUnitResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.chicago.dto.InventoryItemUnitResponse;
  return proto.com.chicago.dto.InventoryItemUnitResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.chicago.dto.InventoryItemUnitResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.chicago.dto.InventoryItemUnitResponse}
 */
proto.com.chicago.dto.InventoryItemUnitResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new inventory_pb.InventoryItemUnit;
      reader.readMessage(value,inventory_pb.InventoryItemUnit.deserializeBinaryFromReader);
      msg.setItemUnit(value);
      break;
    case 2:
      var value = new common_pb.TransactionError;
      reader.readMessage(value,common_pb.TransactionError.deserializeBinaryFromReader);
      msg.setTransactionError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.chicago.dto.InventoryItemUnitResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.chicago.dto.InventoryItemUnitResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.chicago.dto.InventoryItemUnitResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.InventoryItemUnitResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemUnit();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      inventory_pb.InventoryItemUnit.serializeBinaryToWriter
    );
  }
  f = message.getTransactionError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_pb.TransactionError.serializeBinaryToWriter
    );
  }
};


/**
 * optional InventoryItemUnit item_unit = 1;
 * @return {?proto.com.chicago.dto.InventoryItemUnit}
 */
proto.com.chicago.dto.InventoryItemUnitResponse.prototype.getItemUnit = function() {
  return /** @type{?proto.com.chicago.dto.InventoryItemUnit} */ (
    jspb.Message.getWrapperField(this, inventory_pb.InventoryItemUnit, 1));
};


/** @param {?proto.com.chicago.dto.InventoryItemUnit|undefined} value */
proto.com.chicago.dto.InventoryItemUnitResponse.prototype.setItemUnit = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.com.chicago.dto.InventoryItemUnitResponse.prototype.clearItemUnit = function() {
  this.setItemUnit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.com.chicago.dto.InventoryItemUnitResponse.prototype.hasItemUnit = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional TransactionError transaction_error = 2;
 * @return {?proto.com.chicago.dto.TransactionError}
 */
proto.com.chicago.dto.InventoryItemUnitResponse.prototype.getTransactionError = function() {
  return /** @type{?proto.com.chicago.dto.TransactionError} */ (
    jspb.Message.getWrapperField(this, common_pb.TransactionError, 2));
};


/** @param {?proto.com.chicago.dto.TransactionError|undefined} value */
proto.com.chicago.dto.InventoryItemUnitResponse.prototype.setTransactionError = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.com.chicago.dto.InventoryItemUnitResponse.prototype.clearTransactionError = function() {
  this.setTransactionError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.com.chicago.dto.InventoryItemUnitResponse.prototype.hasTransactionError = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.chicago.dto.InventoryItemUnitsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.chicago.dto.InventoryItemUnitsResponse.repeatedFields_, null);
};
goog.inherits(proto.com.chicago.dto.InventoryItemUnitsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.chicago.dto.InventoryItemUnitsResponse.displayName = 'proto.com.chicago.dto.InventoryItemUnitsResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.chicago.dto.InventoryItemUnitsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.chicago.dto.InventoryItemUnitsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.chicago.dto.InventoryItemUnitsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.chicago.dto.InventoryItemUnitsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.InventoryItemUnitsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemUnitsList: jspb.Message.toObjectList(msg.getItemUnitsList(),
    inventory_pb.InventoryItemUnit.toObject, includeInstance),
    transactionError: (f = msg.getTransactionError()) && common_pb.TransactionError.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.chicago.dto.InventoryItemUnitsResponse}
 */
proto.com.chicago.dto.InventoryItemUnitsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.chicago.dto.InventoryItemUnitsResponse;
  return proto.com.chicago.dto.InventoryItemUnitsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.chicago.dto.InventoryItemUnitsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.chicago.dto.InventoryItemUnitsResponse}
 */
proto.com.chicago.dto.InventoryItemUnitsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new inventory_pb.InventoryItemUnit;
      reader.readMessage(value,inventory_pb.InventoryItemUnit.deserializeBinaryFromReader);
      msg.addItemUnits(value);
      break;
    case 2:
      var value = new common_pb.TransactionError;
      reader.readMessage(value,common_pb.TransactionError.deserializeBinaryFromReader);
      msg.setTransactionError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.chicago.dto.InventoryItemUnitsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.chicago.dto.InventoryItemUnitsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.chicago.dto.InventoryItemUnitsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.InventoryItemUnitsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemUnitsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      inventory_pb.InventoryItemUnit.serializeBinaryToWriter
    );
  }
  f = message.getTransactionError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_pb.TransactionError.serializeBinaryToWriter
    );
  }
};


/**
 * repeated InventoryItemUnit item_units = 1;
 * @return {!Array.<!proto.com.chicago.dto.InventoryItemUnit>}
 */
proto.com.chicago.dto.InventoryItemUnitsResponse.prototype.getItemUnitsList = function() {
  return /** @type{!Array.<!proto.com.chicago.dto.InventoryItemUnit>} */ (
    jspb.Message.getRepeatedWrapperField(this, inventory_pb.InventoryItemUnit, 1));
};


/** @param {!Array.<!proto.com.chicago.dto.InventoryItemUnit>} value */
proto.com.chicago.dto.InventoryItemUnitsResponse.prototype.setItemUnitsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.com.chicago.dto.InventoryItemUnit=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.chicago.dto.InventoryItemUnit}
 */
proto.com.chicago.dto.InventoryItemUnitsResponse.prototype.addItemUnits = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.com.chicago.dto.InventoryItemUnit, opt_index);
};


proto.com.chicago.dto.InventoryItemUnitsResponse.prototype.clearItemUnitsList = function() {
  this.setItemUnitsList([]);
};


/**
 * optional TransactionError transaction_error = 2;
 * @return {?proto.com.chicago.dto.TransactionError}
 */
proto.com.chicago.dto.InventoryItemUnitsResponse.prototype.getTransactionError = function() {
  return /** @type{?proto.com.chicago.dto.TransactionError} */ (
    jspb.Message.getWrapperField(this, common_pb.TransactionError, 2));
};


/** @param {?proto.com.chicago.dto.TransactionError|undefined} value */
proto.com.chicago.dto.InventoryItemUnitsResponse.prototype.setTransactionError = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.com.chicago.dto.InventoryItemUnitsResponse.prototype.clearTransactionError = function() {
  this.setTransactionError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.com.chicago.dto.InventoryItemUnitsResponse.prototype.hasTransactionError = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.chicago.dto.InventoryItemSupplierRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.chicago.dto.InventoryItemSupplierRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.chicago.dto.InventoryItemSupplierRequest.displayName = 'proto.com.chicago.dto.InventoryItemSupplierRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.chicago.dto.InventoryItemSupplierRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.chicago.dto.InventoryItemSupplierRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.chicago.dto.InventoryItemSupplierRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.InventoryItemSupplierRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    crudOperation: jspb.Message.getFieldWithDefault(msg, 1, 0),
    itemSupplier: (f = msg.getItemSupplier()) && inventory_pb.InventoryItemSupplier.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.chicago.dto.InventoryItemSupplierRequest}
 */
proto.com.chicago.dto.InventoryItemSupplierRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.chicago.dto.InventoryItemSupplierRequest;
  return proto.com.chicago.dto.InventoryItemSupplierRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.chicago.dto.InventoryItemSupplierRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.chicago.dto.InventoryItemSupplierRequest}
 */
proto.com.chicago.dto.InventoryItemSupplierRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.com.chicago.dto.CrudOperation} */ (reader.readEnum());
      msg.setCrudOperation(value);
      break;
    case 2:
      var value = new inventory_pb.InventoryItemSupplier;
      reader.readMessage(value,inventory_pb.InventoryItemSupplier.deserializeBinaryFromReader);
      msg.setItemSupplier(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.chicago.dto.InventoryItemSupplierRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.chicago.dto.InventoryItemSupplierRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.chicago.dto.InventoryItemSupplierRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.InventoryItemSupplierRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCrudOperation();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getItemSupplier();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      inventory_pb.InventoryItemSupplier.serializeBinaryToWriter
    );
  }
};


/**
 * optional CrudOperation crud_operation = 1;
 * @return {!proto.com.chicago.dto.CrudOperation}
 */
proto.com.chicago.dto.InventoryItemSupplierRequest.prototype.getCrudOperation = function() {
  return /** @type {!proto.com.chicago.dto.CrudOperation} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.com.chicago.dto.CrudOperation} value */
proto.com.chicago.dto.InventoryItemSupplierRequest.prototype.setCrudOperation = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional InventoryItemSupplier item_supplier = 2;
 * @return {?proto.com.chicago.dto.InventoryItemSupplier}
 */
proto.com.chicago.dto.InventoryItemSupplierRequest.prototype.getItemSupplier = function() {
  return /** @type{?proto.com.chicago.dto.InventoryItemSupplier} */ (
    jspb.Message.getWrapperField(this, inventory_pb.InventoryItemSupplier, 2));
};


/** @param {?proto.com.chicago.dto.InventoryItemSupplier|undefined} value */
proto.com.chicago.dto.InventoryItemSupplierRequest.prototype.setItemSupplier = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.com.chicago.dto.InventoryItemSupplierRequest.prototype.clearItemSupplier = function() {
  this.setItemSupplier(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.com.chicago.dto.InventoryItemSupplierRequest.prototype.hasItemSupplier = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.chicago.dto.InventoryItemSupplierResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.chicago.dto.InventoryItemSupplierResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.chicago.dto.InventoryItemSupplierResponse.displayName = 'proto.com.chicago.dto.InventoryItemSupplierResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.chicago.dto.InventoryItemSupplierResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.chicago.dto.InventoryItemSupplierResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.chicago.dto.InventoryItemSupplierResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.InventoryItemSupplierResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemSupplier: (f = msg.getItemSupplier()) && inventory_pb.InventoryItemSupplier.toObject(includeInstance, f),
    transactionError: (f = msg.getTransactionError()) && common_pb.TransactionError.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.chicago.dto.InventoryItemSupplierResponse}
 */
proto.com.chicago.dto.InventoryItemSupplierResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.chicago.dto.InventoryItemSupplierResponse;
  return proto.com.chicago.dto.InventoryItemSupplierResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.chicago.dto.InventoryItemSupplierResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.chicago.dto.InventoryItemSupplierResponse}
 */
proto.com.chicago.dto.InventoryItemSupplierResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new inventory_pb.InventoryItemSupplier;
      reader.readMessage(value,inventory_pb.InventoryItemSupplier.deserializeBinaryFromReader);
      msg.setItemSupplier(value);
      break;
    case 2:
      var value = new common_pb.TransactionError;
      reader.readMessage(value,common_pb.TransactionError.deserializeBinaryFromReader);
      msg.setTransactionError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.chicago.dto.InventoryItemSupplierResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.chicago.dto.InventoryItemSupplierResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.chicago.dto.InventoryItemSupplierResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.InventoryItemSupplierResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemSupplier();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      inventory_pb.InventoryItemSupplier.serializeBinaryToWriter
    );
  }
  f = message.getTransactionError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_pb.TransactionError.serializeBinaryToWriter
    );
  }
};


/**
 * optional InventoryItemSupplier item_supplier = 1;
 * @return {?proto.com.chicago.dto.InventoryItemSupplier}
 */
proto.com.chicago.dto.InventoryItemSupplierResponse.prototype.getItemSupplier = function() {
  return /** @type{?proto.com.chicago.dto.InventoryItemSupplier} */ (
    jspb.Message.getWrapperField(this, inventory_pb.InventoryItemSupplier, 1));
};


/** @param {?proto.com.chicago.dto.InventoryItemSupplier|undefined} value */
proto.com.chicago.dto.InventoryItemSupplierResponse.prototype.setItemSupplier = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.com.chicago.dto.InventoryItemSupplierResponse.prototype.clearItemSupplier = function() {
  this.setItemSupplier(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.com.chicago.dto.InventoryItemSupplierResponse.prototype.hasItemSupplier = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional TransactionError transaction_error = 2;
 * @return {?proto.com.chicago.dto.TransactionError}
 */
proto.com.chicago.dto.InventoryItemSupplierResponse.prototype.getTransactionError = function() {
  return /** @type{?proto.com.chicago.dto.TransactionError} */ (
    jspb.Message.getWrapperField(this, common_pb.TransactionError, 2));
};


/** @param {?proto.com.chicago.dto.TransactionError|undefined} value */
proto.com.chicago.dto.InventoryItemSupplierResponse.prototype.setTransactionError = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.com.chicago.dto.InventoryItemSupplierResponse.prototype.clearTransactionError = function() {
  this.setTransactionError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.com.chicago.dto.InventoryItemSupplierResponse.prototype.hasTransactionError = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.chicago.dto.InventoryItemSuppliersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.chicago.dto.InventoryItemSuppliersResponse.repeatedFields_, null);
};
goog.inherits(proto.com.chicago.dto.InventoryItemSuppliersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.chicago.dto.InventoryItemSuppliersResponse.displayName = 'proto.com.chicago.dto.InventoryItemSuppliersResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.chicago.dto.InventoryItemSuppliersResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.chicago.dto.InventoryItemSuppliersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.chicago.dto.InventoryItemSuppliersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.chicago.dto.InventoryItemSuppliersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.InventoryItemSuppliersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemSuppliersList: jspb.Message.toObjectList(msg.getItemSuppliersList(),
    inventory_pb.InventoryItemSupplier.toObject, includeInstance),
    transactionError: (f = msg.getTransactionError()) && common_pb.TransactionError.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.chicago.dto.InventoryItemSuppliersResponse}
 */
proto.com.chicago.dto.InventoryItemSuppliersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.chicago.dto.InventoryItemSuppliersResponse;
  return proto.com.chicago.dto.InventoryItemSuppliersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.chicago.dto.InventoryItemSuppliersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.chicago.dto.InventoryItemSuppliersResponse}
 */
proto.com.chicago.dto.InventoryItemSuppliersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new inventory_pb.InventoryItemSupplier;
      reader.readMessage(value,inventory_pb.InventoryItemSupplier.deserializeBinaryFromReader);
      msg.addItemSuppliers(value);
      break;
    case 2:
      var value = new common_pb.TransactionError;
      reader.readMessage(value,common_pb.TransactionError.deserializeBinaryFromReader);
      msg.setTransactionError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.chicago.dto.InventoryItemSuppliersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.chicago.dto.InventoryItemSuppliersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.chicago.dto.InventoryItemSuppliersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.InventoryItemSuppliersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemSuppliersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      inventory_pb.InventoryItemSupplier.serializeBinaryToWriter
    );
  }
  f = message.getTransactionError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_pb.TransactionError.serializeBinaryToWriter
    );
  }
};


/**
 * repeated InventoryItemSupplier item_suppliers = 1;
 * @return {!Array.<!proto.com.chicago.dto.InventoryItemSupplier>}
 */
proto.com.chicago.dto.InventoryItemSuppliersResponse.prototype.getItemSuppliersList = function() {
  return /** @type{!Array.<!proto.com.chicago.dto.InventoryItemSupplier>} */ (
    jspb.Message.getRepeatedWrapperField(this, inventory_pb.InventoryItemSupplier, 1));
};


/** @param {!Array.<!proto.com.chicago.dto.InventoryItemSupplier>} value */
proto.com.chicago.dto.InventoryItemSuppliersResponse.prototype.setItemSuppliersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.com.chicago.dto.InventoryItemSupplier=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.chicago.dto.InventoryItemSupplier}
 */
proto.com.chicago.dto.InventoryItemSuppliersResponse.prototype.addItemSuppliers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.com.chicago.dto.InventoryItemSupplier, opt_index);
};


proto.com.chicago.dto.InventoryItemSuppliersResponse.prototype.clearItemSuppliersList = function() {
  this.setItemSuppliersList([]);
};


/**
 * optional TransactionError transaction_error = 2;
 * @return {?proto.com.chicago.dto.TransactionError}
 */
proto.com.chicago.dto.InventoryItemSuppliersResponse.prototype.getTransactionError = function() {
  return /** @type{?proto.com.chicago.dto.TransactionError} */ (
    jspb.Message.getWrapperField(this, common_pb.TransactionError, 2));
};


/** @param {?proto.com.chicago.dto.TransactionError|undefined} value */
proto.com.chicago.dto.InventoryItemSuppliersResponse.prototype.setTransactionError = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.com.chicago.dto.InventoryItemSuppliersResponse.prototype.clearTransactionError = function() {
  this.setTransactionError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.com.chicago.dto.InventoryItemSuppliersResponse.prototype.hasTransactionError = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.chicago.dto.InventoryCatalogItemRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.chicago.dto.InventoryCatalogItemRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.chicago.dto.InventoryCatalogItemRequest.displayName = 'proto.com.chicago.dto.InventoryCatalogItemRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.chicago.dto.InventoryCatalogItemRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.chicago.dto.InventoryCatalogItemRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.chicago.dto.InventoryCatalogItemRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.InventoryCatalogItemRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    crudOperation: jspb.Message.getFieldWithDefault(msg, 1, 0),
    inventoryItem: (f = msg.getInventoryItem()) && inventory_pb.InventoryCatalogItem.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.chicago.dto.InventoryCatalogItemRequest}
 */
proto.com.chicago.dto.InventoryCatalogItemRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.chicago.dto.InventoryCatalogItemRequest;
  return proto.com.chicago.dto.InventoryCatalogItemRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.chicago.dto.InventoryCatalogItemRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.chicago.dto.InventoryCatalogItemRequest}
 */
proto.com.chicago.dto.InventoryCatalogItemRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.com.chicago.dto.CrudOperation} */ (reader.readEnum());
      msg.setCrudOperation(value);
      break;
    case 2:
      var value = new inventory_pb.InventoryCatalogItem;
      reader.readMessage(value,inventory_pb.InventoryCatalogItem.deserializeBinaryFromReader);
      msg.setInventoryItem(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.chicago.dto.InventoryCatalogItemRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.chicago.dto.InventoryCatalogItemRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.chicago.dto.InventoryCatalogItemRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.InventoryCatalogItemRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCrudOperation();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getInventoryItem();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      inventory_pb.InventoryCatalogItem.serializeBinaryToWriter
    );
  }
};


/**
 * optional CrudOperation crud_operation = 1;
 * @return {!proto.com.chicago.dto.CrudOperation}
 */
proto.com.chicago.dto.InventoryCatalogItemRequest.prototype.getCrudOperation = function() {
  return /** @type {!proto.com.chicago.dto.CrudOperation} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.com.chicago.dto.CrudOperation} value */
proto.com.chicago.dto.InventoryCatalogItemRequest.prototype.setCrudOperation = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional InventoryCatalogItem inventory_item = 2;
 * @return {?proto.com.chicago.dto.InventoryCatalogItem}
 */
proto.com.chicago.dto.InventoryCatalogItemRequest.prototype.getInventoryItem = function() {
  return /** @type{?proto.com.chicago.dto.InventoryCatalogItem} */ (
    jspb.Message.getWrapperField(this, inventory_pb.InventoryCatalogItem, 2));
};


/** @param {?proto.com.chicago.dto.InventoryCatalogItem|undefined} value */
proto.com.chicago.dto.InventoryCatalogItemRequest.prototype.setInventoryItem = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.com.chicago.dto.InventoryCatalogItemRequest.prototype.clearInventoryItem = function() {
  this.setInventoryItem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.com.chicago.dto.InventoryCatalogItemRequest.prototype.hasInventoryItem = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.chicago.dto.InventoryCatalogItemResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.chicago.dto.InventoryCatalogItemResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.chicago.dto.InventoryCatalogItemResponse.displayName = 'proto.com.chicago.dto.InventoryCatalogItemResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.chicago.dto.InventoryCatalogItemResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.chicago.dto.InventoryCatalogItemResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.chicago.dto.InventoryCatalogItemResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.InventoryCatalogItemResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    inventoryItem: (f = msg.getInventoryItem()) && inventory_pb.InventoryCatalogItem.toObject(includeInstance, f),
    transactionError: (f = msg.getTransactionError()) && common_pb.TransactionError.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.chicago.dto.InventoryCatalogItemResponse}
 */
proto.com.chicago.dto.InventoryCatalogItemResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.chicago.dto.InventoryCatalogItemResponse;
  return proto.com.chicago.dto.InventoryCatalogItemResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.chicago.dto.InventoryCatalogItemResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.chicago.dto.InventoryCatalogItemResponse}
 */
proto.com.chicago.dto.InventoryCatalogItemResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new inventory_pb.InventoryCatalogItem;
      reader.readMessage(value,inventory_pb.InventoryCatalogItem.deserializeBinaryFromReader);
      msg.setInventoryItem(value);
      break;
    case 2:
      var value = new common_pb.TransactionError;
      reader.readMessage(value,common_pb.TransactionError.deserializeBinaryFromReader);
      msg.setTransactionError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.chicago.dto.InventoryCatalogItemResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.chicago.dto.InventoryCatalogItemResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.chicago.dto.InventoryCatalogItemResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.InventoryCatalogItemResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInventoryItem();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      inventory_pb.InventoryCatalogItem.serializeBinaryToWriter
    );
  }
  f = message.getTransactionError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_pb.TransactionError.serializeBinaryToWriter
    );
  }
};


/**
 * optional InventoryCatalogItem inventory_item = 1;
 * @return {?proto.com.chicago.dto.InventoryCatalogItem}
 */
proto.com.chicago.dto.InventoryCatalogItemResponse.prototype.getInventoryItem = function() {
  return /** @type{?proto.com.chicago.dto.InventoryCatalogItem} */ (
    jspb.Message.getWrapperField(this, inventory_pb.InventoryCatalogItem, 1));
};


/** @param {?proto.com.chicago.dto.InventoryCatalogItem|undefined} value */
proto.com.chicago.dto.InventoryCatalogItemResponse.prototype.setInventoryItem = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.com.chicago.dto.InventoryCatalogItemResponse.prototype.clearInventoryItem = function() {
  this.setInventoryItem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.com.chicago.dto.InventoryCatalogItemResponse.prototype.hasInventoryItem = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional TransactionError transaction_error = 2;
 * @return {?proto.com.chicago.dto.TransactionError}
 */
proto.com.chicago.dto.InventoryCatalogItemResponse.prototype.getTransactionError = function() {
  return /** @type{?proto.com.chicago.dto.TransactionError} */ (
    jspb.Message.getWrapperField(this, common_pb.TransactionError, 2));
};


/** @param {?proto.com.chicago.dto.TransactionError|undefined} value */
proto.com.chicago.dto.InventoryCatalogItemResponse.prototype.setTransactionError = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.com.chicago.dto.InventoryCatalogItemResponse.prototype.clearTransactionError = function() {
  this.setTransactionError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.com.chicago.dto.InventoryCatalogItemResponse.prototype.hasTransactionError = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.chicago.dto.InventoryCatalogItemsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.chicago.dto.InventoryCatalogItemsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.chicago.dto.InventoryCatalogItemsRequest.displayName = 'proto.com.chicago.dto.InventoryCatalogItemsRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.chicago.dto.InventoryCatalogItemsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.chicago.dto.InventoryCatalogItemsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.chicago.dto.InventoryCatalogItemsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.InventoryCatalogItemsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    entityId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.chicago.dto.InventoryCatalogItemsRequest}
 */
proto.com.chicago.dto.InventoryCatalogItemsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.chicago.dto.InventoryCatalogItemsRequest;
  return proto.com.chicago.dto.InventoryCatalogItemsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.chicago.dto.InventoryCatalogItemsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.chicago.dto.InventoryCatalogItemsRequest}
 */
proto.com.chicago.dto.InventoryCatalogItemsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEntityId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.chicago.dto.InventoryCatalogItemsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.chicago.dto.InventoryCatalogItemsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.chicago.dto.InventoryCatalogItemsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.InventoryCatalogItemsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntityId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string entity_id = 1;
 * @return {string}
 */
proto.com.chicago.dto.InventoryCatalogItemsRequest.prototype.getEntityId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.com.chicago.dto.InventoryCatalogItemsRequest.prototype.setEntityId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.chicago.dto.InventoryCatalogItemsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.chicago.dto.InventoryCatalogItemsResponse.repeatedFields_, null);
};
goog.inherits(proto.com.chicago.dto.InventoryCatalogItemsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.chicago.dto.InventoryCatalogItemsResponse.displayName = 'proto.com.chicago.dto.InventoryCatalogItemsResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.chicago.dto.InventoryCatalogItemsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.chicago.dto.InventoryCatalogItemsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.chicago.dto.InventoryCatalogItemsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.chicago.dto.InventoryCatalogItemsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.InventoryCatalogItemsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    inventoryItemsList: jspb.Message.toObjectList(msg.getInventoryItemsList(),
    inventory_pb.InventoryCatalogItem.toObject, includeInstance),
    transactionError: (f = msg.getTransactionError()) && common_pb.TransactionError.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.chicago.dto.InventoryCatalogItemsResponse}
 */
proto.com.chicago.dto.InventoryCatalogItemsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.chicago.dto.InventoryCatalogItemsResponse;
  return proto.com.chicago.dto.InventoryCatalogItemsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.chicago.dto.InventoryCatalogItemsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.chicago.dto.InventoryCatalogItemsResponse}
 */
proto.com.chicago.dto.InventoryCatalogItemsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new inventory_pb.InventoryCatalogItem;
      reader.readMessage(value,inventory_pb.InventoryCatalogItem.deserializeBinaryFromReader);
      msg.addInventoryItems(value);
      break;
    case 2:
      var value = new common_pb.TransactionError;
      reader.readMessage(value,common_pb.TransactionError.deserializeBinaryFromReader);
      msg.setTransactionError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.chicago.dto.InventoryCatalogItemsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.chicago.dto.InventoryCatalogItemsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.chicago.dto.InventoryCatalogItemsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.InventoryCatalogItemsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInventoryItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      inventory_pb.InventoryCatalogItem.serializeBinaryToWriter
    );
  }
  f = message.getTransactionError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_pb.TransactionError.serializeBinaryToWriter
    );
  }
};


/**
 * repeated InventoryCatalogItem inventory_items = 1;
 * @return {!Array.<!proto.com.chicago.dto.InventoryCatalogItem>}
 */
proto.com.chicago.dto.InventoryCatalogItemsResponse.prototype.getInventoryItemsList = function() {
  return /** @type{!Array.<!proto.com.chicago.dto.InventoryCatalogItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, inventory_pb.InventoryCatalogItem, 1));
};


/** @param {!Array.<!proto.com.chicago.dto.InventoryCatalogItem>} value */
proto.com.chicago.dto.InventoryCatalogItemsResponse.prototype.setInventoryItemsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.com.chicago.dto.InventoryCatalogItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.chicago.dto.InventoryCatalogItem}
 */
proto.com.chicago.dto.InventoryCatalogItemsResponse.prototype.addInventoryItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.com.chicago.dto.InventoryCatalogItem, opt_index);
};


proto.com.chicago.dto.InventoryCatalogItemsResponse.prototype.clearInventoryItemsList = function() {
  this.setInventoryItemsList([]);
};


/**
 * optional TransactionError transaction_error = 2;
 * @return {?proto.com.chicago.dto.TransactionError}
 */
proto.com.chicago.dto.InventoryCatalogItemsResponse.prototype.getTransactionError = function() {
  return /** @type{?proto.com.chicago.dto.TransactionError} */ (
    jspb.Message.getWrapperField(this, common_pb.TransactionError, 2));
};


/** @param {?proto.com.chicago.dto.TransactionError|undefined} value */
proto.com.chicago.dto.InventoryCatalogItemsResponse.prototype.setTransactionError = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.com.chicago.dto.InventoryCatalogItemsResponse.prototype.clearTransactionError = function() {
  this.setTransactionError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.com.chicago.dto.InventoryCatalogItemsResponse.prototype.hasTransactionError = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.chicago.dto.InventoryLocationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.chicago.dto.InventoryLocationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.chicago.dto.InventoryLocationRequest.displayName = 'proto.com.chicago.dto.InventoryLocationRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.chicago.dto.InventoryLocationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.chicago.dto.InventoryLocationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.chicago.dto.InventoryLocationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.InventoryLocationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    crudOperation: jspb.Message.getFieldWithDefault(msg, 1, 0),
    inventoryLocation: (f = msg.getInventoryLocation()) && inventory_pb.InventoryLocation.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.chicago.dto.InventoryLocationRequest}
 */
proto.com.chicago.dto.InventoryLocationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.chicago.dto.InventoryLocationRequest;
  return proto.com.chicago.dto.InventoryLocationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.chicago.dto.InventoryLocationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.chicago.dto.InventoryLocationRequest}
 */
proto.com.chicago.dto.InventoryLocationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.com.chicago.dto.CrudOperation} */ (reader.readEnum());
      msg.setCrudOperation(value);
      break;
    case 2:
      var value = new inventory_pb.InventoryLocation;
      reader.readMessage(value,inventory_pb.InventoryLocation.deserializeBinaryFromReader);
      msg.setInventoryLocation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.chicago.dto.InventoryLocationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.chicago.dto.InventoryLocationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.chicago.dto.InventoryLocationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.InventoryLocationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCrudOperation();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getInventoryLocation();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      inventory_pb.InventoryLocation.serializeBinaryToWriter
    );
  }
};


/**
 * optional CrudOperation crud_operation = 1;
 * @return {!proto.com.chicago.dto.CrudOperation}
 */
proto.com.chicago.dto.InventoryLocationRequest.prototype.getCrudOperation = function() {
  return /** @type {!proto.com.chicago.dto.CrudOperation} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.com.chicago.dto.CrudOperation} value */
proto.com.chicago.dto.InventoryLocationRequest.prototype.setCrudOperation = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional InventoryLocation inventory_location = 2;
 * @return {?proto.com.chicago.dto.InventoryLocation}
 */
proto.com.chicago.dto.InventoryLocationRequest.prototype.getInventoryLocation = function() {
  return /** @type{?proto.com.chicago.dto.InventoryLocation} */ (
    jspb.Message.getWrapperField(this, inventory_pb.InventoryLocation, 2));
};


/** @param {?proto.com.chicago.dto.InventoryLocation|undefined} value */
proto.com.chicago.dto.InventoryLocationRequest.prototype.setInventoryLocation = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.com.chicago.dto.InventoryLocationRequest.prototype.clearInventoryLocation = function() {
  this.setInventoryLocation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.com.chicago.dto.InventoryLocationRequest.prototype.hasInventoryLocation = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.chicago.dto.InventoryLocationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.chicago.dto.InventoryLocationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.chicago.dto.InventoryLocationResponse.displayName = 'proto.com.chicago.dto.InventoryLocationResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.chicago.dto.InventoryLocationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.chicago.dto.InventoryLocationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.chicago.dto.InventoryLocationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.InventoryLocationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    inventoryLocation: (f = msg.getInventoryLocation()) && inventory_pb.InventoryLocation.toObject(includeInstance, f),
    transactionError: (f = msg.getTransactionError()) && common_pb.TransactionError.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.chicago.dto.InventoryLocationResponse}
 */
proto.com.chicago.dto.InventoryLocationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.chicago.dto.InventoryLocationResponse;
  return proto.com.chicago.dto.InventoryLocationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.chicago.dto.InventoryLocationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.chicago.dto.InventoryLocationResponse}
 */
proto.com.chicago.dto.InventoryLocationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new inventory_pb.InventoryLocation;
      reader.readMessage(value,inventory_pb.InventoryLocation.deserializeBinaryFromReader);
      msg.setInventoryLocation(value);
      break;
    case 2:
      var value = new common_pb.TransactionError;
      reader.readMessage(value,common_pb.TransactionError.deserializeBinaryFromReader);
      msg.setTransactionError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.chicago.dto.InventoryLocationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.chicago.dto.InventoryLocationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.chicago.dto.InventoryLocationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.InventoryLocationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInventoryLocation();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      inventory_pb.InventoryLocation.serializeBinaryToWriter
    );
  }
  f = message.getTransactionError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_pb.TransactionError.serializeBinaryToWriter
    );
  }
};


/**
 * optional InventoryLocation inventory_location = 1;
 * @return {?proto.com.chicago.dto.InventoryLocation}
 */
proto.com.chicago.dto.InventoryLocationResponse.prototype.getInventoryLocation = function() {
  return /** @type{?proto.com.chicago.dto.InventoryLocation} */ (
    jspb.Message.getWrapperField(this, inventory_pb.InventoryLocation, 1));
};


/** @param {?proto.com.chicago.dto.InventoryLocation|undefined} value */
proto.com.chicago.dto.InventoryLocationResponse.prototype.setInventoryLocation = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.com.chicago.dto.InventoryLocationResponse.prototype.clearInventoryLocation = function() {
  this.setInventoryLocation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.com.chicago.dto.InventoryLocationResponse.prototype.hasInventoryLocation = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional TransactionError transaction_error = 2;
 * @return {?proto.com.chicago.dto.TransactionError}
 */
proto.com.chicago.dto.InventoryLocationResponse.prototype.getTransactionError = function() {
  return /** @type{?proto.com.chicago.dto.TransactionError} */ (
    jspb.Message.getWrapperField(this, common_pb.TransactionError, 2));
};


/** @param {?proto.com.chicago.dto.TransactionError|undefined} value */
proto.com.chicago.dto.InventoryLocationResponse.prototype.setTransactionError = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.com.chicago.dto.InventoryLocationResponse.prototype.clearTransactionError = function() {
  this.setTransactionError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.com.chicago.dto.InventoryLocationResponse.prototype.hasTransactionError = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.chicago.dto.InventoryLocationsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.chicago.dto.InventoryLocationsResponse.repeatedFields_, null);
};
goog.inherits(proto.com.chicago.dto.InventoryLocationsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.chicago.dto.InventoryLocationsResponse.displayName = 'proto.com.chicago.dto.InventoryLocationsResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.chicago.dto.InventoryLocationsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.chicago.dto.InventoryLocationsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.chicago.dto.InventoryLocationsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.chicago.dto.InventoryLocationsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.InventoryLocationsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    inventoryLocationsList: jspb.Message.toObjectList(msg.getInventoryLocationsList(),
    inventory_pb.InventoryLocation.toObject, includeInstance),
    transactionError: (f = msg.getTransactionError()) && common_pb.TransactionError.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.chicago.dto.InventoryLocationsResponse}
 */
proto.com.chicago.dto.InventoryLocationsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.chicago.dto.InventoryLocationsResponse;
  return proto.com.chicago.dto.InventoryLocationsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.chicago.dto.InventoryLocationsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.chicago.dto.InventoryLocationsResponse}
 */
proto.com.chicago.dto.InventoryLocationsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new inventory_pb.InventoryLocation;
      reader.readMessage(value,inventory_pb.InventoryLocation.deserializeBinaryFromReader);
      msg.addInventoryLocations(value);
      break;
    case 2:
      var value = new common_pb.TransactionError;
      reader.readMessage(value,common_pb.TransactionError.deserializeBinaryFromReader);
      msg.setTransactionError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.chicago.dto.InventoryLocationsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.chicago.dto.InventoryLocationsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.chicago.dto.InventoryLocationsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.InventoryLocationsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInventoryLocationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      inventory_pb.InventoryLocation.serializeBinaryToWriter
    );
  }
  f = message.getTransactionError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_pb.TransactionError.serializeBinaryToWriter
    );
  }
};


/**
 * repeated InventoryLocation inventory_locations = 1;
 * @return {!Array.<!proto.com.chicago.dto.InventoryLocation>}
 */
proto.com.chicago.dto.InventoryLocationsResponse.prototype.getInventoryLocationsList = function() {
  return /** @type{!Array.<!proto.com.chicago.dto.InventoryLocation>} */ (
    jspb.Message.getRepeatedWrapperField(this, inventory_pb.InventoryLocation, 1));
};


/** @param {!Array.<!proto.com.chicago.dto.InventoryLocation>} value */
proto.com.chicago.dto.InventoryLocationsResponse.prototype.setInventoryLocationsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.com.chicago.dto.InventoryLocation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.chicago.dto.InventoryLocation}
 */
proto.com.chicago.dto.InventoryLocationsResponse.prototype.addInventoryLocations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.com.chicago.dto.InventoryLocation, opt_index);
};


proto.com.chicago.dto.InventoryLocationsResponse.prototype.clearInventoryLocationsList = function() {
  this.setInventoryLocationsList([]);
};


/**
 * optional TransactionError transaction_error = 2;
 * @return {?proto.com.chicago.dto.TransactionError}
 */
proto.com.chicago.dto.InventoryLocationsResponse.prototype.getTransactionError = function() {
  return /** @type{?proto.com.chicago.dto.TransactionError} */ (
    jspb.Message.getWrapperField(this, common_pb.TransactionError, 2));
};


/** @param {?proto.com.chicago.dto.TransactionError|undefined} value */
proto.com.chicago.dto.InventoryLocationsResponse.prototype.setTransactionError = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.com.chicago.dto.InventoryLocationsResponse.prototype.clearTransactionError = function() {
  this.setTransactionError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.com.chicago.dto.InventoryLocationsResponse.prototype.hasTransactionError = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.com.chicago.dto);
