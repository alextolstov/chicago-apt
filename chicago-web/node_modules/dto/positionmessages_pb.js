/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var common_pb = require('./common_pb.js');
var position_pb = require('./position_pb.js');
goog.exportSymbol('proto.com.chicago.dto.PositionRequest', null, global);
goog.exportSymbol('proto.com.chicago.dto.PositionResponse', null, global);
goog.exportSymbol('proto.com.chicago.dto.PositionsResponse', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.chicago.dto.PositionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.chicago.dto.PositionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.chicago.dto.PositionRequest.displayName = 'proto.com.chicago.dto.PositionRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.chicago.dto.PositionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.chicago.dto.PositionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.chicago.dto.PositionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.PositionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    crudOperation: jspb.Message.getFieldWithDefault(msg, 1, 0),
    position: (f = msg.getPosition()) && position_pb.Position.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.chicago.dto.PositionRequest}
 */
proto.com.chicago.dto.PositionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.chicago.dto.PositionRequest;
  return proto.com.chicago.dto.PositionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.chicago.dto.PositionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.chicago.dto.PositionRequest}
 */
proto.com.chicago.dto.PositionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.com.chicago.dto.CrudOperation} */ (reader.readEnum());
      msg.setCrudOperation(value);
      break;
    case 2:
      var value = new position_pb.Position;
      reader.readMessage(value,position_pb.Position.deserializeBinaryFromReader);
      msg.setPosition(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.chicago.dto.PositionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.chicago.dto.PositionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.chicago.dto.PositionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.PositionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCrudOperation();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getPosition();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      position_pb.Position.serializeBinaryToWriter
    );
  }
};


/**
 * optional CrudOperation crud_operation = 1;
 * @return {!proto.com.chicago.dto.CrudOperation}
 */
proto.com.chicago.dto.PositionRequest.prototype.getCrudOperation = function() {
  return /** @type {!proto.com.chicago.dto.CrudOperation} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.com.chicago.dto.CrudOperation} value */
proto.com.chicago.dto.PositionRequest.prototype.setCrudOperation = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional Position position = 2;
 * @return {?proto.com.chicago.dto.Position}
 */
proto.com.chicago.dto.PositionRequest.prototype.getPosition = function() {
  return /** @type{?proto.com.chicago.dto.Position} */ (
    jspb.Message.getWrapperField(this, position_pb.Position, 2));
};


/** @param {?proto.com.chicago.dto.Position|undefined} value */
proto.com.chicago.dto.PositionRequest.prototype.setPosition = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.com.chicago.dto.PositionRequest.prototype.clearPosition = function() {
  this.setPosition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.com.chicago.dto.PositionRequest.prototype.hasPosition = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.chicago.dto.PositionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.chicago.dto.PositionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.chicago.dto.PositionResponse.displayName = 'proto.com.chicago.dto.PositionResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.chicago.dto.PositionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.chicago.dto.PositionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.chicago.dto.PositionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.PositionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    position: (f = msg.getPosition()) && position_pb.Position.toObject(includeInstance, f),
    transactionError: (f = msg.getTransactionError()) && common_pb.TransactionError.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.chicago.dto.PositionResponse}
 */
proto.com.chicago.dto.PositionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.chicago.dto.PositionResponse;
  return proto.com.chicago.dto.PositionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.chicago.dto.PositionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.chicago.dto.PositionResponse}
 */
proto.com.chicago.dto.PositionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new position_pb.Position;
      reader.readMessage(value,position_pb.Position.deserializeBinaryFromReader);
      msg.setPosition(value);
      break;
    case 2:
      var value = new common_pb.TransactionError;
      reader.readMessage(value,common_pb.TransactionError.deserializeBinaryFromReader);
      msg.setTransactionError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.chicago.dto.PositionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.chicago.dto.PositionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.chicago.dto.PositionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.PositionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPosition();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      position_pb.Position.serializeBinaryToWriter
    );
  }
  f = message.getTransactionError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_pb.TransactionError.serializeBinaryToWriter
    );
  }
};


/**
 * optional Position position = 1;
 * @return {?proto.com.chicago.dto.Position}
 */
proto.com.chicago.dto.PositionResponse.prototype.getPosition = function() {
  return /** @type{?proto.com.chicago.dto.Position} */ (
    jspb.Message.getWrapperField(this, position_pb.Position, 1));
};


/** @param {?proto.com.chicago.dto.Position|undefined} value */
proto.com.chicago.dto.PositionResponse.prototype.setPosition = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.com.chicago.dto.PositionResponse.prototype.clearPosition = function() {
  this.setPosition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.com.chicago.dto.PositionResponse.prototype.hasPosition = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional TransactionError transaction_error = 2;
 * @return {?proto.com.chicago.dto.TransactionError}
 */
proto.com.chicago.dto.PositionResponse.prototype.getTransactionError = function() {
  return /** @type{?proto.com.chicago.dto.TransactionError} */ (
    jspb.Message.getWrapperField(this, common_pb.TransactionError, 2));
};


/** @param {?proto.com.chicago.dto.TransactionError|undefined} value */
proto.com.chicago.dto.PositionResponse.prototype.setTransactionError = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.com.chicago.dto.PositionResponse.prototype.clearTransactionError = function() {
  this.setTransactionError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.com.chicago.dto.PositionResponse.prototype.hasTransactionError = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.chicago.dto.PositionsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.chicago.dto.PositionsResponse.repeatedFields_, null);
};
goog.inherits(proto.com.chicago.dto.PositionsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.chicago.dto.PositionsResponse.displayName = 'proto.com.chicago.dto.PositionsResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.chicago.dto.PositionsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.chicago.dto.PositionsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.chicago.dto.PositionsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.chicago.dto.PositionsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.PositionsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    positionsList: jspb.Message.toObjectList(msg.getPositionsList(),
    position_pb.Position.toObject, includeInstance),
    transactionError: (f = msg.getTransactionError()) && common_pb.TransactionError.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.chicago.dto.PositionsResponse}
 */
proto.com.chicago.dto.PositionsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.chicago.dto.PositionsResponse;
  return proto.com.chicago.dto.PositionsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.chicago.dto.PositionsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.chicago.dto.PositionsResponse}
 */
proto.com.chicago.dto.PositionsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new position_pb.Position;
      reader.readMessage(value,position_pb.Position.deserializeBinaryFromReader);
      msg.addPositions(value);
      break;
    case 2:
      var value = new common_pb.TransactionError;
      reader.readMessage(value,common_pb.TransactionError.deserializeBinaryFromReader);
      msg.setTransactionError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.chicago.dto.PositionsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.chicago.dto.PositionsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.chicago.dto.PositionsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.PositionsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPositionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      position_pb.Position.serializeBinaryToWriter
    );
  }
  f = message.getTransactionError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_pb.TransactionError.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Position positions = 1;
 * @return {!Array.<!proto.com.chicago.dto.Position>}
 */
proto.com.chicago.dto.PositionsResponse.prototype.getPositionsList = function() {
  return /** @type{!Array.<!proto.com.chicago.dto.Position>} */ (
    jspb.Message.getRepeatedWrapperField(this, position_pb.Position, 1));
};


/** @param {!Array.<!proto.com.chicago.dto.Position>} value */
proto.com.chicago.dto.PositionsResponse.prototype.setPositionsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.com.chicago.dto.Position=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.chicago.dto.Position}
 */
proto.com.chicago.dto.PositionsResponse.prototype.addPositions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.com.chicago.dto.Position, opt_index);
};


proto.com.chicago.dto.PositionsResponse.prototype.clearPositionsList = function() {
  this.setPositionsList([]);
};


/**
 * optional TransactionError transaction_error = 2;
 * @return {?proto.com.chicago.dto.TransactionError}
 */
proto.com.chicago.dto.PositionsResponse.prototype.getTransactionError = function() {
  return /** @type{?proto.com.chicago.dto.TransactionError} */ (
    jspb.Message.getWrapperField(this, common_pb.TransactionError, 2));
};


/** @param {?proto.com.chicago.dto.TransactionError|undefined} value */
proto.com.chicago.dto.PositionsResponse.prototype.setTransactionError = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.com.chicago.dto.PositionsResponse.prototype.clearTransactionError = function() {
  this.setTransactionError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.com.chicago.dto.PositionsResponse.prototype.hasTransactionError = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.com.chicago.dto);
