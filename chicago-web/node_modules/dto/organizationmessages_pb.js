/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var common_pb = require('./common_pb.js');
var organization_pb = require('./organization_pb.js');
goog.exportSymbol('proto.com.chicago.dto.OrganizationRequest', null, global);
goog.exportSymbol('proto.com.chicago.dto.OrganizationResponse', null, global);
goog.exportSymbol('proto.com.chicago.dto.OrganizationStructureRequest', null, global);
goog.exportSymbol('proto.com.chicago.dto.OrganizationStructureResponse', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.chicago.dto.OrganizationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.chicago.dto.OrganizationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.chicago.dto.OrganizationRequest.displayName = 'proto.com.chicago.dto.OrganizationRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.chicago.dto.OrganizationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.chicago.dto.OrganizationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.chicago.dto.OrganizationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.OrganizationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    crudOperation: jspb.Message.getFieldWithDefault(msg, 1, 0),
    organization: (f = msg.getOrganization()) && organization_pb.Organization.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.chicago.dto.OrganizationRequest}
 */
proto.com.chicago.dto.OrganizationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.chicago.dto.OrganizationRequest;
  return proto.com.chicago.dto.OrganizationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.chicago.dto.OrganizationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.chicago.dto.OrganizationRequest}
 */
proto.com.chicago.dto.OrganizationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.com.chicago.dto.CrudOperation} */ (reader.readEnum());
      msg.setCrudOperation(value);
      break;
    case 2:
      var value = new organization_pb.Organization;
      reader.readMessage(value,organization_pb.Organization.deserializeBinaryFromReader);
      msg.setOrganization(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.chicago.dto.OrganizationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.chicago.dto.OrganizationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.chicago.dto.OrganizationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.OrganizationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCrudOperation();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getOrganization();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      organization_pb.Organization.serializeBinaryToWriter
    );
  }
};


/**
 * optional CrudOperation crud_operation = 1;
 * @return {!proto.com.chicago.dto.CrudOperation}
 */
proto.com.chicago.dto.OrganizationRequest.prototype.getCrudOperation = function() {
  return /** @type {!proto.com.chicago.dto.CrudOperation} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.com.chicago.dto.CrudOperation} value */
proto.com.chicago.dto.OrganizationRequest.prototype.setCrudOperation = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional Organization organization = 2;
 * @return {?proto.com.chicago.dto.Organization}
 */
proto.com.chicago.dto.OrganizationRequest.prototype.getOrganization = function() {
  return /** @type{?proto.com.chicago.dto.Organization} */ (
    jspb.Message.getWrapperField(this, organization_pb.Organization, 2));
};


/** @param {?proto.com.chicago.dto.Organization|undefined} value */
proto.com.chicago.dto.OrganizationRequest.prototype.setOrganization = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.com.chicago.dto.OrganizationRequest.prototype.clearOrganization = function() {
  this.setOrganization(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.com.chicago.dto.OrganizationRequest.prototype.hasOrganization = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.chicago.dto.OrganizationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.chicago.dto.OrganizationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.chicago.dto.OrganizationResponse.displayName = 'proto.com.chicago.dto.OrganizationResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.chicago.dto.OrganizationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.chicago.dto.OrganizationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.chicago.dto.OrganizationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.OrganizationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    organization: (f = msg.getOrganization()) && organization_pb.Organization.toObject(includeInstance, f),
    transactionError: (f = msg.getTransactionError()) && common_pb.TransactionError.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.chicago.dto.OrganizationResponse}
 */
proto.com.chicago.dto.OrganizationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.chicago.dto.OrganizationResponse;
  return proto.com.chicago.dto.OrganizationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.chicago.dto.OrganizationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.chicago.dto.OrganizationResponse}
 */
proto.com.chicago.dto.OrganizationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new organization_pb.Organization;
      reader.readMessage(value,organization_pb.Organization.deserializeBinaryFromReader);
      msg.setOrganization(value);
      break;
    case 2:
      var value = new common_pb.TransactionError;
      reader.readMessage(value,common_pb.TransactionError.deserializeBinaryFromReader);
      msg.setTransactionError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.chicago.dto.OrganizationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.chicago.dto.OrganizationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.chicago.dto.OrganizationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.OrganizationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganization();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      organization_pb.Organization.serializeBinaryToWriter
    );
  }
  f = message.getTransactionError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_pb.TransactionError.serializeBinaryToWriter
    );
  }
};


/**
 * optional Organization organization = 1;
 * @return {?proto.com.chicago.dto.Organization}
 */
proto.com.chicago.dto.OrganizationResponse.prototype.getOrganization = function() {
  return /** @type{?proto.com.chicago.dto.Organization} */ (
    jspb.Message.getWrapperField(this, organization_pb.Organization, 1));
};


/** @param {?proto.com.chicago.dto.Organization|undefined} value */
proto.com.chicago.dto.OrganizationResponse.prototype.setOrganization = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.com.chicago.dto.OrganizationResponse.prototype.clearOrganization = function() {
  this.setOrganization(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.com.chicago.dto.OrganizationResponse.prototype.hasOrganization = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional TransactionError transaction_error = 2;
 * @return {?proto.com.chicago.dto.TransactionError}
 */
proto.com.chicago.dto.OrganizationResponse.prototype.getTransactionError = function() {
  return /** @type{?proto.com.chicago.dto.TransactionError} */ (
    jspb.Message.getWrapperField(this, common_pb.TransactionError, 2));
};


/** @param {?proto.com.chicago.dto.TransactionError|undefined} value */
proto.com.chicago.dto.OrganizationResponse.prototype.setTransactionError = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.com.chicago.dto.OrganizationResponse.prototype.clearTransactionError = function() {
  this.setTransactionError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.com.chicago.dto.OrganizationResponse.prototype.hasTransactionError = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.chicago.dto.OrganizationStructureRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.chicago.dto.OrganizationStructureRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.chicago.dto.OrganizationStructureRequest.displayName = 'proto.com.chicago.dto.OrganizationStructureRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.chicago.dto.OrganizationStructureRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.chicago.dto.OrganizationStructureRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.chicago.dto.OrganizationStructureRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.OrganizationStructureRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    organizationType: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.chicago.dto.OrganizationStructureRequest}
 */
proto.com.chicago.dto.OrganizationStructureRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.chicago.dto.OrganizationStructureRequest;
  return proto.com.chicago.dto.OrganizationStructureRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.chicago.dto.OrganizationStructureRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.chicago.dto.OrganizationStructureRequest}
 */
proto.com.chicago.dto.OrganizationStructureRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {!proto.com.chicago.dto.OrganizationType} */ (reader.readEnum());
      msg.setOrganizationType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.chicago.dto.OrganizationStructureRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.chicago.dto.OrganizationStructureRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.chicago.dto.OrganizationStructureRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.OrganizationStructureRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOrganizationType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.com.chicago.dto.OrganizationStructureRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.com.chicago.dto.OrganizationStructureRequest.prototype.setUserId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional OrganizationType organization_type = 2;
 * @return {!proto.com.chicago.dto.OrganizationType}
 */
proto.com.chicago.dto.OrganizationStructureRequest.prototype.getOrganizationType = function() {
  return /** @type {!proto.com.chicago.dto.OrganizationType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.com.chicago.dto.OrganizationType} value */
proto.com.chicago.dto.OrganizationStructureRequest.prototype.setOrganizationType = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.chicago.dto.OrganizationStructureResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.chicago.dto.OrganizationStructureResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.chicago.dto.OrganizationStructureResponse.displayName = 'proto.com.chicago.dto.OrganizationStructureResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.chicago.dto.OrganizationStructureResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.chicago.dto.OrganizationStructureResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.chicago.dto.OrganizationStructureResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.OrganizationStructureResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    organizationInfo: (f = msg.getOrganizationInfo()) && organization_pb.OrganizationInfo.toObject(includeInstance, f),
    transactionError: (f = msg.getTransactionError()) && common_pb.TransactionError.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.chicago.dto.OrganizationStructureResponse}
 */
proto.com.chicago.dto.OrganizationStructureResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.chicago.dto.OrganizationStructureResponse;
  return proto.com.chicago.dto.OrganizationStructureResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.chicago.dto.OrganizationStructureResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.chicago.dto.OrganizationStructureResponse}
 */
proto.com.chicago.dto.OrganizationStructureResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new organization_pb.OrganizationInfo;
      reader.readMessage(value,organization_pb.OrganizationInfo.deserializeBinaryFromReader);
      msg.setOrganizationInfo(value);
      break;
    case 2:
      var value = new common_pb.TransactionError;
      reader.readMessage(value,common_pb.TransactionError.deserializeBinaryFromReader);
      msg.setTransactionError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.chicago.dto.OrganizationStructureResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.chicago.dto.OrganizationStructureResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.chicago.dto.OrganizationStructureResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.OrganizationStructureResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganizationInfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      organization_pb.OrganizationInfo.serializeBinaryToWriter
    );
  }
  f = message.getTransactionError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_pb.TransactionError.serializeBinaryToWriter
    );
  }
};


/**
 * optional OrganizationInfo organization_info = 1;
 * @return {?proto.com.chicago.dto.OrganizationInfo}
 */
proto.com.chicago.dto.OrganizationStructureResponse.prototype.getOrganizationInfo = function() {
  return /** @type{?proto.com.chicago.dto.OrganizationInfo} */ (
    jspb.Message.getWrapperField(this, organization_pb.OrganizationInfo, 1));
};


/** @param {?proto.com.chicago.dto.OrganizationInfo|undefined} value */
proto.com.chicago.dto.OrganizationStructureResponse.prototype.setOrganizationInfo = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.com.chicago.dto.OrganizationStructureResponse.prototype.clearOrganizationInfo = function() {
  this.setOrganizationInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.com.chicago.dto.OrganizationStructureResponse.prototype.hasOrganizationInfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional TransactionError transaction_error = 2;
 * @return {?proto.com.chicago.dto.TransactionError}
 */
proto.com.chicago.dto.OrganizationStructureResponse.prototype.getTransactionError = function() {
  return /** @type{?proto.com.chicago.dto.TransactionError} */ (
    jspb.Message.getWrapperField(this, common_pb.TransactionError, 2));
};


/** @param {?proto.com.chicago.dto.TransactionError|undefined} value */
proto.com.chicago.dto.OrganizationStructureResponse.prototype.setTransactionError = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.com.chicago.dto.OrganizationStructureResponse.prototype.clearTransactionError = function() {
  this.setTransactionError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.com.chicago.dto.OrganizationStructureResponse.prototype.hasTransactionError = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.com.chicago.dto);
