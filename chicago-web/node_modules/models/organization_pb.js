/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.com.chicago.dto.Branch', null, global);
goog.exportSymbol('proto.com.chicago.dto.Company', null, global);
goog.exportSymbol('proto.com.chicago.dto.Holding', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.chicago.dto.Holding = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.chicago.dto.Holding.repeatedFields_, null);
};
goog.inherits(proto.com.chicago.dto.Holding, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.chicago.dto.Holding.displayName = 'proto.com.chicago.dto.Holding';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.chicago.dto.Holding.repeatedFields_ = [7,8,9,10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.chicago.dto.Holding.prototype.toObject = function(opt_includeInstance) {
  return proto.com.chicago.dto.Holding.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.chicago.dto.Holding} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.Holding.toObject = function(includeInstance, msg) {
  var f, obj = {
    holdingId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    description: jspb.Message.getFieldWithDefault(msg, 4, ""),
    webSite: jspb.Message.getFieldWithDefault(msg, 5, ""),
    emailDomain: jspb.Message.getFieldWithDefault(msg, 6, ""),
    phonesList: jspb.Message.getRepeatedField(msg, 7),
    faxList: jspb.Message.getRepeatedField(msg, 8),
    usersList: jspb.Message.getRepeatedField(msg, 9),
    companiesList: jspb.Message.getRepeatedField(msg, 10),
    addresId: jspb.Message.getFieldWithDefault(msg, 11, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.chicago.dto.Holding}
 */
proto.com.chicago.dto.Holding.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.chicago.dto.Holding;
  return proto.com.chicago.dto.Holding.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.chicago.dto.Holding} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.chicago.dto.Holding}
 */
proto.com.chicago.dto.Holding.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHoldingId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setWebSite(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmailDomain(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.addPhones(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.addFax(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.addUsers(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.addCompanies(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddresId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.chicago.dto.Holding.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.chicago.dto.Holding.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.chicago.dto.Holding} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.Holding.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHoldingId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getWebSite();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getEmailDomain();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getPhonesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      7,
      f
    );
  }
  f = message.getFaxList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      8,
      f
    );
  }
  f = message.getUsersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      9,
      f
    );
  }
  f = message.getCompaniesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      10,
      f
    );
  }
  f = message.getAddresId();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * optional string holding_id = 1;
 * @return {string}
 */
proto.com.chicago.dto.Holding.prototype.getHoldingId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.com.chicago.dto.Holding.prototype.setHoldingId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.com.chicago.dto.Holding.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.com.chicago.dto.Holding.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string description = 4;
 * @return {string}
 */
proto.com.chicago.dto.Holding.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.com.chicago.dto.Holding.prototype.setDescription = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string web_site = 5;
 * @return {string}
 */
proto.com.chicago.dto.Holding.prototype.getWebSite = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.com.chicago.dto.Holding.prototype.setWebSite = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string email_domain = 6;
 * @return {string}
 */
proto.com.chicago.dto.Holding.prototype.getEmailDomain = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.com.chicago.dto.Holding.prototype.setEmailDomain = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * repeated string phones = 7;
 * @return {!Array.<string>}
 */
proto.com.chicago.dto.Holding.prototype.getPhonesList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 7));
};


/** @param {!Array.<string>} value */
proto.com.chicago.dto.Holding.prototype.setPhonesList = function(value) {
  jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.com.chicago.dto.Holding.prototype.addPhones = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


proto.com.chicago.dto.Holding.prototype.clearPhonesList = function() {
  this.setPhonesList([]);
};


/**
 * repeated string fax = 8;
 * @return {!Array.<string>}
 */
proto.com.chicago.dto.Holding.prototype.getFaxList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 8));
};


/** @param {!Array.<string>} value */
proto.com.chicago.dto.Holding.prototype.setFaxList = function(value) {
  jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.com.chicago.dto.Holding.prototype.addFax = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


proto.com.chicago.dto.Holding.prototype.clearFaxList = function() {
  this.setFaxList([]);
};


/**
 * repeated string users = 9;
 * @return {!Array.<string>}
 */
proto.com.chicago.dto.Holding.prototype.getUsersList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 9));
};


/** @param {!Array.<string>} value */
proto.com.chicago.dto.Holding.prototype.setUsersList = function(value) {
  jspb.Message.setField(this, 9, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.com.chicago.dto.Holding.prototype.addUsers = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 9, value, opt_index);
};


proto.com.chicago.dto.Holding.prototype.clearUsersList = function() {
  this.setUsersList([]);
};


/**
 * repeated string companies = 10;
 * @return {!Array.<string>}
 */
proto.com.chicago.dto.Holding.prototype.getCompaniesList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 10));
};


/** @param {!Array.<string>} value */
proto.com.chicago.dto.Holding.prototype.setCompaniesList = function(value) {
  jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.com.chicago.dto.Holding.prototype.addCompanies = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


proto.com.chicago.dto.Holding.prototype.clearCompaniesList = function() {
  this.setCompaniesList([]);
};


/**
 * optional string addres_id = 11;
 * @return {string}
 */
proto.com.chicago.dto.Holding.prototype.getAddresId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.com.chicago.dto.Holding.prototype.setAddresId = function(value) {
  jspb.Message.setProto3StringField(this, 11, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.chicago.dto.Company = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.chicago.dto.Company.repeatedFields_, null);
};
goog.inherits(proto.com.chicago.dto.Company, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.chicago.dto.Company.displayName = 'proto.com.chicago.dto.Company';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.chicago.dto.Company.repeatedFields_ = [7,8,9,10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.chicago.dto.Company.prototype.toObject = function(opt_includeInstance) {
  return proto.com.chicago.dto.Company.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.chicago.dto.Company} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.Company.toObject = function(includeInstance, msg) {
  var f, obj = {
    companyId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    webSite: jspb.Message.getFieldWithDefault(msg, 4, ""),
    emailDomain: jspb.Message.getFieldWithDefault(msg, 5, ""),
    holdingId: jspb.Message.getFieldWithDefault(msg, 6, ""),
    phonesList: jspb.Message.getRepeatedField(msg, 7),
    faxList: jspb.Message.getRepeatedField(msg, 8),
    usersList: jspb.Message.getRepeatedField(msg, 9),
    branchesList: jspb.Message.getRepeatedField(msg, 10),
    addresId: jspb.Message.getFieldWithDefault(msg, 11, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.chicago.dto.Company}
 */
proto.com.chicago.dto.Company.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.chicago.dto.Company;
  return proto.com.chicago.dto.Company.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.chicago.dto.Company} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.chicago.dto.Company}
 */
proto.com.chicago.dto.Company.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setWebSite(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmailDomain(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setHoldingId(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.addPhones(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.addFax(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.addUsers(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.addBranches(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddresId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.chicago.dto.Company.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.chicago.dto.Company.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.chicago.dto.Company} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.Company.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCompanyId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getWebSite();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getEmailDomain();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getHoldingId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getPhonesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      7,
      f
    );
  }
  f = message.getFaxList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      8,
      f
    );
  }
  f = message.getUsersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      9,
      f
    );
  }
  f = message.getBranchesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      10,
      f
    );
  }
  f = message.getAddresId();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * optional string company_id = 1;
 * @return {string}
 */
proto.com.chicago.dto.Company.prototype.getCompanyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.com.chicago.dto.Company.prototype.setCompanyId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.com.chicago.dto.Company.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.com.chicago.dto.Company.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.com.chicago.dto.Company.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.com.chicago.dto.Company.prototype.setDescription = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string web_site = 4;
 * @return {string}
 */
proto.com.chicago.dto.Company.prototype.getWebSite = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.com.chicago.dto.Company.prototype.setWebSite = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string email_domain = 5;
 * @return {string}
 */
proto.com.chicago.dto.Company.prototype.getEmailDomain = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.com.chicago.dto.Company.prototype.setEmailDomain = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string holding_id = 6;
 * @return {string}
 */
proto.com.chicago.dto.Company.prototype.getHoldingId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.com.chicago.dto.Company.prototype.setHoldingId = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * repeated string phones = 7;
 * @return {!Array.<string>}
 */
proto.com.chicago.dto.Company.prototype.getPhonesList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 7));
};


/** @param {!Array.<string>} value */
proto.com.chicago.dto.Company.prototype.setPhonesList = function(value) {
  jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.com.chicago.dto.Company.prototype.addPhones = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


proto.com.chicago.dto.Company.prototype.clearPhonesList = function() {
  this.setPhonesList([]);
};


/**
 * repeated string fax = 8;
 * @return {!Array.<string>}
 */
proto.com.chicago.dto.Company.prototype.getFaxList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 8));
};


/** @param {!Array.<string>} value */
proto.com.chicago.dto.Company.prototype.setFaxList = function(value) {
  jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.com.chicago.dto.Company.prototype.addFax = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


proto.com.chicago.dto.Company.prototype.clearFaxList = function() {
  this.setFaxList([]);
};


/**
 * repeated string users = 9;
 * @return {!Array.<string>}
 */
proto.com.chicago.dto.Company.prototype.getUsersList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 9));
};


/** @param {!Array.<string>} value */
proto.com.chicago.dto.Company.prototype.setUsersList = function(value) {
  jspb.Message.setField(this, 9, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.com.chicago.dto.Company.prototype.addUsers = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 9, value, opt_index);
};


proto.com.chicago.dto.Company.prototype.clearUsersList = function() {
  this.setUsersList([]);
};


/**
 * repeated string branches = 10;
 * @return {!Array.<string>}
 */
proto.com.chicago.dto.Company.prototype.getBranchesList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 10));
};


/** @param {!Array.<string>} value */
proto.com.chicago.dto.Company.prototype.setBranchesList = function(value) {
  jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.com.chicago.dto.Company.prototype.addBranches = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


proto.com.chicago.dto.Company.prototype.clearBranchesList = function() {
  this.setBranchesList([]);
};


/**
 * optional string addres_id = 11;
 * @return {string}
 */
proto.com.chicago.dto.Company.prototype.getAddresId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.com.chicago.dto.Company.prototype.setAddresId = function(value) {
  jspb.Message.setProto3StringField(this, 11, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.chicago.dto.Branch = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.chicago.dto.Branch.repeatedFields_, null);
};
goog.inherits(proto.com.chicago.dto.Branch, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.chicago.dto.Branch.displayName = 'proto.com.chicago.dto.Branch';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.chicago.dto.Branch.repeatedFields_ = [5,6,7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.chicago.dto.Branch.prototype.toObject = function(opt_includeInstance) {
  return proto.com.chicago.dto.Branch.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.chicago.dto.Branch} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.Branch.toObject = function(includeInstance, msg) {
  var f, obj = {
    branchId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    companyId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    phonesList: jspb.Message.getRepeatedField(msg, 5),
    faxList: jspb.Message.getRepeatedField(msg, 6),
    usersList: jspb.Message.getRepeatedField(msg, 7),
    addressId: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.chicago.dto.Branch}
 */
proto.com.chicago.dto.Branch.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.chicago.dto.Branch;
  return proto.com.chicago.dto.Branch.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.chicago.dto.Branch} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.chicago.dto.Branch}
 */
proto.com.chicago.dto.Branch.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBranchId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addPhones(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addFax(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.addUsers(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddressId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.chicago.dto.Branch.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.chicago.dto.Branch.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.chicago.dto.Branch} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.Branch.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBranchId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCompanyId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPhonesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getFaxList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
  f = message.getUsersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      7,
      f
    );
  }
  f = message.getAddressId();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional string branch_id = 1;
 * @return {string}
 */
proto.com.chicago.dto.Branch.prototype.getBranchId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.com.chicago.dto.Branch.prototype.setBranchId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.com.chicago.dto.Branch.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.com.chicago.dto.Branch.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.com.chicago.dto.Branch.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.com.chicago.dto.Branch.prototype.setDescription = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string company_id = 4;
 * @return {string}
 */
proto.com.chicago.dto.Branch.prototype.getCompanyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.com.chicago.dto.Branch.prototype.setCompanyId = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * repeated string phones = 5;
 * @return {!Array.<string>}
 */
proto.com.chicago.dto.Branch.prototype.getPhonesList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/** @param {!Array.<string>} value */
proto.com.chicago.dto.Branch.prototype.setPhonesList = function(value) {
  jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.com.chicago.dto.Branch.prototype.addPhones = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


proto.com.chicago.dto.Branch.prototype.clearPhonesList = function() {
  this.setPhonesList([]);
};


/**
 * repeated string fax = 6;
 * @return {!Array.<string>}
 */
proto.com.chicago.dto.Branch.prototype.getFaxList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/** @param {!Array.<string>} value */
proto.com.chicago.dto.Branch.prototype.setFaxList = function(value) {
  jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.com.chicago.dto.Branch.prototype.addFax = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


proto.com.chicago.dto.Branch.prototype.clearFaxList = function() {
  this.setFaxList([]);
};


/**
 * repeated string users = 7;
 * @return {!Array.<string>}
 */
proto.com.chicago.dto.Branch.prototype.getUsersList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 7));
};


/** @param {!Array.<string>} value */
proto.com.chicago.dto.Branch.prototype.setUsersList = function(value) {
  jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.com.chicago.dto.Branch.prototype.addUsers = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


proto.com.chicago.dto.Branch.prototype.clearUsersList = function() {
  this.setUsersList([]);
};


/**
 * optional string address_id = 8;
 * @return {string}
 */
proto.com.chicago.dto.Branch.prototype.getAddressId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.com.chicago.dto.Branch.prototype.setAddressId = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};


goog.object.extend(exports, proto.com.chicago.dto);
