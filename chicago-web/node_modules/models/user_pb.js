/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var permission_pb = require('./permission_pb.js');
goog.exportSymbol('proto.com.chicago.dto.User', null, global);
goog.exportSymbol('proto.com.chicago.dto.UserAvatar', null, global);
goog.exportSymbol('proto.com.chicago.dto.UserOrganization', null, global);
goog.exportSymbol('proto.com.chicago.dto.UserPassword', null, global);
goog.exportSymbol('proto.com.chicago.dto.UserPermissions', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.chicago.dto.UserPermissions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.chicago.dto.UserPermissions.repeatedFields_, null);
};
goog.inherits(proto.com.chicago.dto.UserPermissions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.chicago.dto.UserPermissions.displayName = 'proto.com.chicago.dto.UserPermissions';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.chicago.dto.UserPermissions.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.chicago.dto.UserPermissions.prototype.toObject = function(opt_includeInstance) {
  return proto.com.chicago.dto.UserPermissions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.chicago.dto.UserPermissions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.UserPermissions.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    rolesList: jspb.Message.toObjectList(msg.getRolesList(),
    permission_pb.Role.toObject, includeInstance),
    extraPermissionsList: jspb.Message.toObjectList(msg.getExtraPermissionsList(),
    permission_pb.Permission.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.chicago.dto.UserPermissions}
 */
proto.com.chicago.dto.UserPermissions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.chicago.dto.UserPermissions;
  return proto.com.chicago.dto.UserPermissions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.chicago.dto.UserPermissions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.chicago.dto.UserPermissions}
 */
proto.com.chicago.dto.UserPermissions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = new permission_pb.Role;
      reader.readMessage(value,permission_pb.Role.deserializeBinaryFromReader);
      msg.addRoles(value);
      break;
    case 3:
      var value = new permission_pb.Permission;
      reader.readMessage(value,permission_pb.Permission.deserializeBinaryFromReader);
      msg.addExtraPermissions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.chicago.dto.UserPermissions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.chicago.dto.UserPermissions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.chicago.dto.UserPermissions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.UserPermissions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRolesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      permission_pb.Role.serializeBinaryToWriter
    );
  }
  f = message.getExtraPermissionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      permission_pb.Permission.serializeBinaryToWriter
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.com.chicago.dto.UserPermissions.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.com.chicago.dto.UserPermissions.prototype.setUserId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated Role roles = 2;
 * @return {!Array.<!proto.com.chicago.dto.Role>}
 */
proto.com.chicago.dto.UserPermissions.prototype.getRolesList = function() {
  return /** @type{!Array.<!proto.com.chicago.dto.Role>} */ (
    jspb.Message.getRepeatedWrapperField(this, permission_pb.Role, 2));
};


/** @param {!Array.<!proto.com.chicago.dto.Role>} value */
proto.com.chicago.dto.UserPermissions.prototype.setRolesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.com.chicago.dto.Role=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.chicago.dto.Role}
 */
proto.com.chicago.dto.UserPermissions.prototype.addRoles = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.com.chicago.dto.Role, opt_index);
};


proto.com.chicago.dto.UserPermissions.prototype.clearRolesList = function() {
  this.setRolesList([]);
};


/**
 * repeated Permission extra_permissions = 3;
 * @return {!Array.<!proto.com.chicago.dto.Permission>}
 */
proto.com.chicago.dto.UserPermissions.prototype.getExtraPermissionsList = function() {
  return /** @type{!Array.<!proto.com.chicago.dto.Permission>} */ (
    jspb.Message.getRepeatedWrapperField(this, permission_pb.Permission, 3));
};


/** @param {!Array.<!proto.com.chicago.dto.Permission>} value */
proto.com.chicago.dto.UserPermissions.prototype.setExtraPermissionsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.com.chicago.dto.Permission=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.chicago.dto.Permission}
 */
proto.com.chicago.dto.UserPermissions.prototype.addExtraPermissions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.com.chicago.dto.Permission, opt_index);
};


proto.com.chicago.dto.UserPermissions.prototype.clearExtraPermissionsList = function() {
  this.setExtraPermissionsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.chicago.dto.UserOrganization = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.chicago.dto.UserOrganization, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.chicago.dto.UserOrganization.displayName = 'proto.com.chicago.dto.UserOrganization';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.chicago.dto.UserOrganization.prototype.toObject = function(opt_includeInstance) {
  return proto.com.chicago.dto.UserOrganization.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.chicago.dto.UserOrganization} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.UserOrganization.toObject = function(includeInstance, msg) {
  var f, obj = {
    organizationId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.chicago.dto.UserOrganization}
 */
proto.com.chicago.dto.UserOrganization.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.chicago.dto.UserOrganization;
  return proto.com.chicago.dto.UserOrganization.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.chicago.dto.UserOrganization} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.chicago.dto.UserOrganization}
 */
proto.com.chicago.dto.UserOrganization.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganizationId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.chicago.dto.UserOrganization.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.chicago.dto.UserOrganization.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.chicago.dto.UserOrganization} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.UserOrganization.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganizationId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string organization_id = 1;
 * @return {string}
 */
proto.com.chicago.dto.UserOrganization.prototype.getOrganizationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.com.chicago.dto.UserOrganization.prototype.setOrganizationId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.chicago.dto.User = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.chicago.dto.User.repeatedFields_, null);
};
goog.inherits(proto.com.chicago.dto.User, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.chicago.dto.User.displayName = 'proto.com.chicago.dto.User';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.chicago.dto.User.repeatedFields_ = [28,29];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.chicago.dto.User.prototype.toObject = function(opt_includeInstance) {
  return proto.com.chicago.dto.User.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.chicago.dto.User} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.User.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    email: jspb.Message.getFieldWithDefault(msg, 2, ""),
    password: jspb.Message.getFieldWithDefault(msg, 3, ""),
    avatar: msg.getAvatar_asB64(),
    firstName: jspb.Message.getFieldWithDefault(msg, 5, ""),
    middleName: jspb.Message.getFieldWithDefault(msg, 6, ""),
    lastName: jspb.Message.getFieldWithDefault(msg, 7, ""),
    nickName: jspb.Message.getFieldWithDefault(msg, 8, ""),
    cellPhone: jspb.Message.getFieldWithDefault(msg, 9, ""),
    homePhone: jspb.Message.getFieldWithDefault(msg, 10, ""),
    workPhone: jspb.Message.getFieldWithDefault(msg, 11, ""),
    passportNumber: jspb.Message.getFieldWithDefault(msg, 12, ""),
    dateOfBirth: jspb.Message.getFieldWithDefault(msg, 13, 0),
    employmentDate: jspb.Message.getFieldWithDefault(msg, 14, 0),
    actualEmploymentDate: jspb.Message.getFieldWithDefault(msg, 15, 0),
    dismissalDate: jspb.Message.getFieldWithDefault(msg, 16, 0),
    actualDismissalDate: jspb.Message.getFieldWithDefault(msg, 17, 0),
    taxPayerId: jspb.Message.getFieldWithDefault(msg, 18, ""),
    diplomaNumber: jspb.Message.getFieldWithDefault(msg, 19, ""),
    diplomaDate: jspb.Message.getFieldWithDefault(msg, 20, 0),
    retirementIdNumber: jspb.Message.getFieldWithDefault(msg, 21, ""),
    retirementDate: jspb.Message.getFieldWithDefault(msg, 22, 0),
    medicalBook: jspb.Message.getFieldWithDefault(msg, 23, ""),
    medicalBookDate: jspb.Message.getFieldWithDefault(msg, 24, 0),
    employmentBookNumber: jspb.Message.getFieldWithDefault(msg, 25, ""),
    organizationId: jspb.Message.getFieldWithDefault(msg, 26, ""),
    addressId: jspb.Message.getFieldWithDefault(msg, 27, ""),
    permissionNamesList: jspb.Message.getRepeatedField(msg, 28),
    positionsList: jspb.Message.getRepeatedField(msg, 29),
    createDatetime: jspb.Message.getFieldWithDefault(msg, 30, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.chicago.dto.User}
 */
proto.com.chicago.dto.User.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.chicago.dto.User;
  return proto.com.chicago.dto.User.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.chicago.dto.User} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.chicago.dto.User}
 */
proto.com.chicago.dto.User.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setAvatar(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setFirstName(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setMiddleName(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastName(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setNickName(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setCellPhone(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setHomePhone(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setWorkPhone(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassportNumber(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDateOfBirth(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEmploymentDate(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setActualEmploymentDate(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDismissalDate(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setActualDismissalDate(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setTaxPayerId(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setDiplomaNumber(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDiplomaDate(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setRetirementIdNumber(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRetirementDate(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setMedicalBook(value);
      break;
    case 24:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMedicalBookDate(value);
      break;
    case 25:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmploymentBookNumber(value);
      break;
    case 26:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganizationId(value);
      break;
    case 27:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddressId(value);
      break;
    case 28:
      var value = /** @type {string} */ (reader.readString());
      msg.addPermissionNames(value);
      break;
    case 29:
      var value = /** @type {string} */ (reader.readString());
      msg.addPositions(value);
      break;
    case 30:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreateDatetime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.chicago.dto.User.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.chicago.dto.User.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.chicago.dto.User} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.User.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAvatar_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getFirstName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getMiddleName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getLastName();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getNickName();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getCellPhone();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getHomePhone();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getWorkPhone();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getPassportNumber();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getDateOfBirth();
  if (f !== 0) {
    writer.writeInt64(
      13,
      f
    );
  }
  f = message.getEmploymentDate();
  if (f !== 0) {
    writer.writeInt64(
      14,
      f
    );
  }
  f = message.getActualEmploymentDate();
  if (f !== 0) {
    writer.writeInt64(
      15,
      f
    );
  }
  f = message.getDismissalDate();
  if (f !== 0) {
    writer.writeInt64(
      16,
      f
    );
  }
  f = message.getActualDismissalDate();
  if (f !== 0) {
    writer.writeInt64(
      17,
      f
    );
  }
  f = message.getTaxPayerId();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getDiplomaNumber();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getDiplomaDate();
  if (f !== 0) {
    writer.writeInt64(
      20,
      f
    );
  }
  f = message.getRetirementIdNumber();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getRetirementDate();
  if (f !== 0) {
    writer.writeInt64(
      22,
      f
    );
  }
  f = message.getMedicalBook();
  if (f.length > 0) {
    writer.writeString(
      23,
      f
    );
  }
  f = message.getMedicalBookDate();
  if (f !== 0) {
    writer.writeInt64(
      24,
      f
    );
  }
  f = message.getEmploymentBookNumber();
  if (f.length > 0) {
    writer.writeString(
      25,
      f
    );
  }
  f = message.getOrganizationId();
  if (f.length > 0) {
    writer.writeString(
      26,
      f
    );
  }
  f = message.getAddressId();
  if (f.length > 0) {
    writer.writeString(
      27,
      f
    );
  }
  f = message.getPermissionNamesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      28,
      f
    );
  }
  f = message.getPositionsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      29,
      f
    );
  }
  f = message.getCreateDatetime();
  if (f !== 0) {
    writer.writeInt64(
      30,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.com.chicago.dto.User.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.com.chicago.dto.User.prototype.setUserId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string email = 2;
 * @return {string}
 */
proto.com.chicago.dto.User.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.com.chicago.dto.User.prototype.setEmail = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string password = 3;
 * @return {string}
 */
proto.com.chicago.dto.User.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.com.chicago.dto.User.prototype.setPassword = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bytes avatar = 4;
 * @return {!(string|Uint8Array)}
 */
proto.com.chicago.dto.User.prototype.getAvatar = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes avatar = 4;
 * This is a type-conversion wrapper around `getAvatar()`
 * @return {string}
 */
proto.com.chicago.dto.User.prototype.getAvatar_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getAvatar()));
};


/**
 * optional bytes avatar = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getAvatar()`
 * @return {!Uint8Array}
 */
proto.com.chicago.dto.User.prototype.getAvatar_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getAvatar()));
};


/** @param {!(string|Uint8Array)} value */
proto.com.chicago.dto.User.prototype.setAvatar = function(value) {
  jspb.Message.setProto3BytesField(this, 4, value);
};


/**
 * optional string first_name = 5;
 * @return {string}
 */
proto.com.chicago.dto.User.prototype.getFirstName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.com.chicago.dto.User.prototype.setFirstName = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string middle_name = 6;
 * @return {string}
 */
proto.com.chicago.dto.User.prototype.getMiddleName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.com.chicago.dto.User.prototype.setMiddleName = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string last_name = 7;
 * @return {string}
 */
proto.com.chicago.dto.User.prototype.getLastName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.com.chicago.dto.User.prototype.setLastName = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string nick_name = 8;
 * @return {string}
 */
proto.com.chicago.dto.User.prototype.getNickName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.com.chicago.dto.User.prototype.setNickName = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string cell_phone = 9;
 * @return {string}
 */
proto.com.chicago.dto.User.prototype.getCellPhone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.com.chicago.dto.User.prototype.setCellPhone = function(value) {
  jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string home_phone = 10;
 * @return {string}
 */
proto.com.chicago.dto.User.prototype.getHomePhone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.com.chicago.dto.User.prototype.setHomePhone = function(value) {
  jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string work_phone = 11;
 * @return {string}
 */
proto.com.chicago.dto.User.prototype.getWorkPhone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.com.chicago.dto.User.prototype.setWorkPhone = function(value) {
  jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string passport_number = 12;
 * @return {string}
 */
proto.com.chicago.dto.User.prototype.getPassportNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/** @param {string} value */
proto.com.chicago.dto.User.prototype.setPassportNumber = function(value) {
  jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional int64 date_of_birth = 13;
 * @return {number}
 */
proto.com.chicago.dto.User.prototype.getDateOfBirth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/** @param {number} value */
proto.com.chicago.dto.User.prototype.setDateOfBirth = function(value) {
  jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional int64 employment_date = 14;
 * @return {number}
 */
proto.com.chicago.dto.User.prototype.getEmploymentDate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/** @param {number} value */
proto.com.chicago.dto.User.prototype.setEmploymentDate = function(value) {
  jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional int64 actual_employment_date = 15;
 * @return {number}
 */
proto.com.chicago.dto.User.prototype.getActualEmploymentDate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/** @param {number} value */
proto.com.chicago.dto.User.prototype.setActualEmploymentDate = function(value) {
  jspb.Message.setProto3IntField(this, 15, value);
};


/**
 * optional int64 dismissal_date = 16;
 * @return {number}
 */
proto.com.chicago.dto.User.prototype.getDismissalDate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/** @param {number} value */
proto.com.chicago.dto.User.prototype.setDismissalDate = function(value) {
  jspb.Message.setProto3IntField(this, 16, value);
};


/**
 * optional int64 actual_dismissal_date = 17;
 * @return {number}
 */
proto.com.chicago.dto.User.prototype.getActualDismissalDate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/** @param {number} value */
proto.com.chicago.dto.User.prototype.setActualDismissalDate = function(value) {
  jspb.Message.setProto3IntField(this, 17, value);
};


/**
 * optional string tax_payer_id = 18;
 * @return {string}
 */
proto.com.chicago.dto.User.prototype.getTaxPayerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/** @param {string} value */
proto.com.chicago.dto.User.prototype.setTaxPayerId = function(value) {
  jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional string diploma_number = 19;
 * @return {string}
 */
proto.com.chicago.dto.User.prototype.getDiplomaNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/** @param {string} value */
proto.com.chicago.dto.User.prototype.setDiplomaNumber = function(value) {
  jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional int64 diploma_date = 20;
 * @return {number}
 */
proto.com.chicago.dto.User.prototype.getDiplomaDate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/** @param {number} value */
proto.com.chicago.dto.User.prototype.setDiplomaDate = function(value) {
  jspb.Message.setProto3IntField(this, 20, value);
};


/**
 * optional string retirement_id_number = 21;
 * @return {string}
 */
proto.com.chicago.dto.User.prototype.getRetirementIdNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/** @param {string} value */
proto.com.chicago.dto.User.prototype.setRetirementIdNumber = function(value) {
  jspb.Message.setProto3StringField(this, 21, value);
};


/**
 * optional int64 retirement_date = 22;
 * @return {number}
 */
proto.com.chicago.dto.User.prototype.getRetirementDate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 22, 0));
};


/** @param {number} value */
proto.com.chicago.dto.User.prototype.setRetirementDate = function(value) {
  jspb.Message.setProto3IntField(this, 22, value);
};


/**
 * optional string medical_book = 23;
 * @return {string}
 */
proto.com.chicago.dto.User.prototype.getMedicalBook = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/** @param {string} value */
proto.com.chicago.dto.User.prototype.setMedicalBook = function(value) {
  jspb.Message.setProto3StringField(this, 23, value);
};


/**
 * optional int64 medical_book_date = 24;
 * @return {number}
 */
proto.com.chicago.dto.User.prototype.getMedicalBookDate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 24, 0));
};


/** @param {number} value */
proto.com.chicago.dto.User.prototype.setMedicalBookDate = function(value) {
  jspb.Message.setProto3IntField(this, 24, value);
};


/**
 * optional string employment_book_number = 25;
 * @return {string}
 */
proto.com.chicago.dto.User.prototype.getEmploymentBookNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 25, ""));
};


/** @param {string} value */
proto.com.chicago.dto.User.prototype.setEmploymentBookNumber = function(value) {
  jspb.Message.setProto3StringField(this, 25, value);
};


/**
 * optional string organization_id = 26;
 * @return {string}
 */
proto.com.chicago.dto.User.prototype.getOrganizationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 26, ""));
};


/** @param {string} value */
proto.com.chicago.dto.User.prototype.setOrganizationId = function(value) {
  jspb.Message.setProto3StringField(this, 26, value);
};


/**
 * optional string address_id = 27;
 * @return {string}
 */
proto.com.chicago.dto.User.prototype.getAddressId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 27, ""));
};


/** @param {string} value */
proto.com.chicago.dto.User.prototype.setAddressId = function(value) {
  jspb.Message.setProto3StringField(this, 27, value);
};


/**
 * repeated string permission_names = 28;
 * @return {!Array.<string>}
 */
proto.com.chicago.dto.User.prototype.getPermissionNamesList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 28));
};


/** @param {!Array.<string>} value */
proto.com.chicago.dto.User.prototype.setPermissionNamesList = function(value) {
  jspb.Message.setField(this, 28, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.com.chicago.dto.User.prototype.addPermissionNames = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 28, value, opt_index);
};


proto.com.chicago.dto.User.prototype.clearPermissionNamesList = function() {
  this.setPermissionNamesList([]);
};


/**
 * repeated string positions = 29;
 * @return {!Array.<string>}
 */
proto.com.chicago.dto.User.prototype.getPositionsList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 29));
};


/** @param {!Array.<string>} value */
proto.com.chicago.dto.User.prototype.setPositionsList = function(value) {
  jspb.Message.setField(this, 29, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.com.chicago.dto.User.prototype.addPositions = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 29, value, opt_index);
};


proto.com.chicago.dto.User.prototype.clearPositionsList = function() {
  this.setPositionsList([]);
};


/**
 * optional int64 create_datetime = 30;
 * @return {number}
 */
proto.com.chicago.dto.User.prototype.getCreateDatetime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 30, 0));
};


/** @param {number} value */
proto.com.chicago.dto.User.prototype.setCreateDatetime = function(value) {
  jspb.Message.setProto3IntField(this, 30, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.chicago.dto.UserAvatar = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.chicago.dto.UserAvatar, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.chicago.dto.UserAvatar.displayName = 'proto.com.chicago.dto.UserAvatar';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.chicago.dto.UserAvatar.prototype.toObject = function(opt_includeInstance) {
  return proto.com.chicago.dto.UserAvatar.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.chicago.dto.UserAvatar} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.UserAvatar.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    avatar: msg.getAvatar_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.chicago.dto.UserAvatar}
 */
proto.com.chicago.dto.UserAvatar.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.chicago.dto.UserAvatar;
  return proto.com.chicago.dto.UserAvatar.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.chicago.dto.UserAvatar} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.chicago.dto.UserAvatar}
 */
proto.com.chicago.dto.UserAvatar.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setAvatar(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.chicago.dto.UserAvatar.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.chicago.dto.UserAvatar.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.chicago.dto.UserAvatar} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.UserAvatar.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAvatar_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.com.chicago.dto.UserAvatar.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.com.chicago.dto.UserAvatar.prototype.setUserId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bytes avatar = 2;
 * @return {!(string|Uint8Array)}
 */
proto.com.chicago.dto.UserAvatar.prototype.getAvatar = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes avatar = 2;
 * This is a type-conversion wrapper around `getAvatar()`
 * @return {string}
 */
proto.com.chicago.dto.UserAvatar.prototype.getAvatar_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getAvatar()));
};


/**
 * optional bytes avatar = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getAvatar()`
 * @return {!Uint8Array}
 */
proto.com.chicago.dto.UserAvatar.prototype.getAvatar_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getAvatar()));
};


/** @param {!(string|Uint8Array)} value */
proto.com.chicago.dto.UserAvatar.prototype.setAvatar = function(value) {
  jspb.Message.setProto3BytesField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.chicago.dto.UserPassword = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.chicago.dto.UserPassword, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.chicago.dto.UserPassword.displayName = 'proto.com.chicago.dto.UserPassword';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.chicago.dto.UserPassword.prototype.toObject = function(opt_includeInstance) {
  return proto.com.chicago.dto.UserPassword.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.chicago.dto.UserPassword} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.UserPassword.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    password: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.chicago.dto.UserPassword}
 */
proto.com.chicago.dto.UserPassword.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.chicago.dto.UserPassword;
  return proto.com.chicago.dto.UserPassword.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.chicago.dto.UserPassword} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.chicago.dto.UserPassword}
 */
proto.com.chicago.dto.UserPassword.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.chicago.dto.UserPassword.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.chicago.dto.UserPassword.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.chicago.dto.UserPassword} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.UserPassword.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.com.chicago.dto.UserPassword.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.com.chicago.dto.UserPassword.prototype.setUserId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string password = 2;
 * @return {string}
 */
proto.com.chicago.dto.UserPassword.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.com.chicago.dto.UserPassword.prototype.setPassword = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


goog.object.extend(exports, proto.com.chicago.dto);
