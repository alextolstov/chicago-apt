/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var common_pb = require('./common_pb.js');
var user_pb = require('./user_pb.js');
var permission_pb = require('./permission_pb.js');
goog.exportSymbol('proto.com.chicago.dto.SystemPermissionsRequest', null, global);
goog.exportSymbol('proto.com.chicago.dto.SystemPermissionsResponse', null, global);
goog.exportSymbol('proto.com.chicago.dto.UserPermissionsRequest', null, global);
goog.exportSymbol('proto.com.chicago.dto.UserPermissionsResponse', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.chicago.dto.UserPermissionsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.chicago.dto.UserPermissionsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.chicago.dto.UserPermissionsRequest.displayName = 'proto.com.chicago.dto.UserPermissionsRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.chicago.dto.UserPermissionsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.chicago.dto.UserPermissionsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.chicago.dto.UserPermissionsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.UserPermissionsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    crudOperation: jspb.Message.getFieldWithDefault(msg, 1, 0),
    permissions: (f = msg.getPermissions()) && user_pb.UserPermissions.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.chicago.dto.UserPermissionsRequest}
 */
proto.com.chicago.dto.UserPermissionsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.chicago.dto.UserPermissionsRequest;
  return proto.com.chicago.dto.UserPermissionsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.chicago.dto.UserPermissionsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.chicago.dto.UserPermissionsRequest}
 */
proto.com.chicago.dto.UserPermissionsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.com.chicago.dto.CrudOperation} */ (reader.readEnum());
      msg.setCrudOperation(value);
      break;
    case 2:
      var value = new user_pb.UserPermissions;
      reader.readMessage(value,user_pb.UserPermissions.deserializeBinaryFromReader);
      msg.setPermissions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.chicago.dto.UserPermissionsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.chicago.dto.UserPermissionsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.chicago.dto.UserPermissionsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.UserPermissionsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCrudOperation();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getPermissions();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      user_pb.UserPermissions.serializeBinaryToWriter
    );
  }
};


/**
 * optional CrudOperation crud_operation = 1;
 * @return {!proto.com.chicago.dto.CrudOperation}
 */
proto.com.chicago.dto.UserPermissionsRequest.prototype.getCrudOperation = function() {
  return /** @type {!proto.com.chicago.dto.CrudOperation} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.com.chicago.dto.CrudOperation} value */
proto.com.chicago.dto.UserPermissionsRequest.prototype.setCrudOperation = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional UserPermissions permissions = 2;
 * @return {?proto.com.chicago.dto.UserPermissions}
 */
proto.com.chicago.dto.UserPermissionsRequest.prototype.getPermissions = function() {
  return /** @type{?proto.com.chicago.dto.UserPermissions} */ (
    jspb.Message.getWrapperField(this, user_pb.UserPermissions, 2));
};


/** @param {?proto.com.chicago.dto.UserPermissions|undefined} value */
proto.com.chicago.dto.UserPermissionsRequest.prototype.setPermissions = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.com.chicago.dto.UserPermissionsRequest.prototype.clearPermissions = function() {
  this.setPermissions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.com.chicago.dto.UserPermissionsRequest.prototype.hasPermissions = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.chicago.dto.UserPermissionsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.chicago.dto.UserPermissionsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.chicago.dto.UserPermissionsResponse.displayName = 'proto.com.chicago.dto.UserPermissionsResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.chicago.dto.UserPermissionsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.chicago.dto.UserPermissionsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.chicago.dto.UserPermissionsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.UserPermissionsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    permissions: (f = msg.getPermissions()) && user_pb.UserPermissions.toObject(includeInstance, f),
    transactionError: (f = msg.getTransactionError()) && common_pb.TransactionError.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.chicago.dto.UserPermissionsResponse}
 */
proto.com.chicago.dto.UserPermissionsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.chicago.dto.UserPermissionsResponse;
  return proto.com.chicago.dto.UserPermissionsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.chicago.dto.UserPermissionsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.chicago.dto.UserPermissionsResponse}
 */
proto.com.chicago.dto.UserPermissionsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new user_pb.UserPermissions;
      reader.readMessage(value,user_pb.UserPermissions.deserializeBinaryFromReader);
      msg.setPermissions(value);
      break;
    case 2:
      var value = new common_pb.TransactionError;
      reader.readMessage(value,common_pb.TransactionError.deserializeBinaryFromReader);
      msg.setTransactionError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.chicago.dto.UserPermissionsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.chicago.dto.UserPermissionsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.chicago.dto.UserPermissionsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.UserPermissionsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPermissions();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      user_pb.UserPermissions.serializeBinaryToWriter
    );
  }
  f = message.getTransactionError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_pb.TransactionError.serializeBinaryToWriter
    );
  }
};


/**
 * optional UserPermissions permissions = 1;
 * @return {?proto.com.chicago.dto.UserPermissions}
 */
proto.com.chicago.dto.UserPermissionsResponse.prototype.getPermissions = function() {
  return /** @type{?proto.com.chicago.dto.UserPermissions} */ (
    jspb.Message.getWrapperField(this, user_pb.UserPermissions, 1));
};


/** @param {?proto.com.chicago.dto.UserPermissions|undefined} value */
proto.com.chicago.dto.UserPermissionsResponse.prototype.setPermissions = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.com.chicago.dto.UserPermissionsResponse.prototype.clearPermissions = function() {
  this.setPermissions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.com.chicago.dto.UserPermissionsResponse.prototype.hasPermissions = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional TransactionError transaction_error = 2;
 * @return {?proto.com.chicago.dto.TransactionError}
 */
proto.com.chicago.dto.UserPermissionsResponse.prototype.getTransactionError = function() {
  return /** @type{?proto.com.chicago.dto.TransactionError} */ (
    jspb.Message.getWrapperField(this, common_pb.TransactionError, 2));
};


/** @param {?proto.com.chicago.dto.TransactionError|undefined} value */
proto.com.chicago.dto.UserPermissionsResponse.prototype.setTransactionError = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.com.chicago.dto.UserPermissionsResponse.prototype.clearTransactionError = function() {
  this.setTransactionError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.com.chicago.dto.UserPermissionsResponse.prototype.hasTransactionError = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.chicago.dto.SystemPermissionsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.chicago.dto.SystemPermissionsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.chicago.dto.SystemPermissionsRequest.displayName = 'proto.com.chicago.dto.SystemPermissionsRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.chicago.dto.SystemPermissionsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.chicago.dto.SystemPermissionsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.chicago.dto.SystemPermissionsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.SystemPermissionsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.chicago.dto.SystemPermissionsRequest}
 */
proto.com.chicago.dto.SystemPermissionsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.chicago.dto.SystemPermissionsRequest;
  return proto.com.chicago.dto.SystemPermissionsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.chicago.dto.SystemPermissionsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.chicago.dto.SystemPermissionsRequest}
 */
proto.com.chicago.dto.SystemPermissionsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.chicago.dto.SystemPermissionsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.chicago.dto.SystemPermissionsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.chicago.dto.SystemPermissionsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.SystemPermissionsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.chicago.dto.SystemPermissionsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.chicago.dto.SystemPermissionsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.chicago.dto.SystemPermissionsResponse.displayName = 'proto.com.chicago.dto.SystemPermissionsResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.chicago.dto.SystemPermissionsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.chicago.dto.SystemPermissionsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.chicago.dto.SystemPermissionsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.SystemPermissionsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    roles: (f = msg.getRoles()) && permission_pb.Roles.toObject(includeInstance, f),
    transactionError: (f = msg.getTransactionError()) && common_pb.TransactionError.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.chicago.dto.SystemPermissionsResponse}
 */
proto.com.chicago.dto.SystemPermissionsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.chicago.dto.SystemPermissionsResponse;
  return proto.com.chicago.dto.SystemPermissionsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.chicago.dto.SystemPermissionsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.chicago.dto.SystemPermissionsResponse}
 */
proto.com.chicago.dto.SystemPermissionsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new permission_pb.Roles;
      reader.readMessage(value,permission_pb.Roles.deserializeBinaryFromReader);
      msg.setRoles(value);
      break;
    case 2:
      var value = new common_pb.TransactionError;
      reader.readMessage(value,common_pb.TransactionError.deserializeBinaryFromReader);
      msg.setTransactionError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.chicago.dto.SystemPermissionsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.chicago.dto.SystemPermissionsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.chicago.dto.SystemPermissionsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.chicago.dto.SystemPermissionsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRoles();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      permission_pb.Roles.serializeBinaryToWriter
    );
  }
  f = message.getTransactionError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_pb.TransactionError.serializeBinaryToWriter
    );
  }
};


/**
 * optional Roles roles = 1;
 * @return {?proto.com.chicago.dto.Roles}
 */
proto.com.chicago.dto.SystemPermissionsResponse.prototype.getRoles = function() {
  return /** @type{?proto.com.chicago.dto.Roles} */ (
    jspb.Message.getWrapperField(this, permission_pb.Roles, 1));
};


/** @param {?proto.com.chicago.dto.Roles|undefined} value */
proto.com.chicago.dto.SystemPermissionsResponse.prototype.setRoles = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.com.chicago.dto.SystemPermissionsResponse.prototype.clearRoles = function() {
  this.setRoles(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.com.chicago.dto.SystemPermissionsResponse.prototype.hasRoles = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional TransactionError transaction_error = 2;
 * @return {?proto.com.chicago.dto.TransactionError}
 */
proto.com.chicago.dto.SystemPermissionsResponse.prototype.getTransactionError = function() {
  return /** @type{?proto.com.chicago.dto.TransactionError} */ (
    jspb.Message.getWrapperField(this, common_pb.TransactionError, 2));
};


/** @param {?proto.com.chicago.dto.TransactionError|undefined} value */
proto.com.chicago.dto.SystemPermissionsResponse.prototype.setTransactionError = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.com.chicago.dto.SystemPermissionsResponse.prototype.clearTransactionError = function() {
  this.setTransactionError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.com.chicago.dto.SystemPermissionsResponse.prototype.hasTransactionError = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.com.chicago.dto);
